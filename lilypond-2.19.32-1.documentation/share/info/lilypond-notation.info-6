This is out-www/lilypond-notation.info, produced by makeinfo version
4.13 from out-www/notation.texi.

Copyright (C) 1998-2015 by the authors.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections.  A copy of the license is
     included in the section entitled "GNU Free Documentation License".


File: lilypond-notation.info,  Node: Scheme functions,  Prev: Predefined type predicates,  Up: Notation manual tables

A.22 Scheme functions
=====================

 -- Function: ly:add-context-mod contextmods modification
     Adds the given context MODIFICATION to the list CONTEXTMODS of
     context modifications.

 -- Function: ly:add-file-name-alist alist
     Add mappings for error messages from ALIST.

 -- Function: ly:add-interface iface desc props
     Add a new grob interface.  IFACE is the interface name, DESC is
     the interface description, and PROPS is the list of user-settable
     properties for the interface.

 -- Function: ly:add-listener callback disp cl
     Add the single-argument procedure CALLBACK as listener to the
     dispatcher DISP.  Whenever DISP hears an event of class CL, it
     calls CALLBACK with it.

 -- Function: ly:add-option sym val description
     Add a program option SYM.  VAL is the default value and
     DESCRIPTION is a string description.

 -- Function: ly:all-grob-interfaces
     Return the hash table with all grob interface descriptions.

 -- Function: ly:all-options
     Get all option settings in an alist.

 -- Function: ly:all-stencil-expressions
     Return all symbols recognized as stencil expressions.

 -- Function: ly:assoc-get key alist default-value strict-checking
     Return value if KEY in ALIST, else DEFAULT-VALUE (or `#f' if not
     specified).  If STRICT-CHECKING is set to `#t' and KEY is not in
     ALIST, a programming_error is output.

 -- Function: ly:axis-group-interface::add-element grob grob-element
     Set GROB the parent of GROB-ELEMENT on all axes of GROB.

 -- Function: ly:basic-progress str rest
     A Scheme callable function to issue a basic progress message STR.
     The message is formatted with `format' and REST.

 -- Function: ly:beam-score-count
     count number of beam scores.

 -- Function: ly:bigpdfs
     Return true if the command line includes the `--bigpdf' parameter.

 -- Function: ly:book? x
     Is X a `Book' object?

 -- Function: ly:book-add-bookpart! book-smob book-part
     Add BOOK-PART to BOOK-SMOB book part list.

 -- Function: ly:book-add-score! book-smob score
     Add SCORE to BOOK-SMOB score list.

 -- Function: ly:book-book-parts book
     Return book parts in BOOK.

 -- Function: ly:book-header book
     Return header in BOOK.

 -- Function: ly:book-paper book
     Return paper in BOOK.

 -- Function: ly:book-process book-smob default-paper default-layout
          output
     Print book.  OUTPUT is passed to the backend unchanged.  For
     example, it may be a string (for file based outputs) or a socket
     (for network based output).

 -- Function: ly:book-process-to-systems book-smob default-paper
          default-layout output
     Print book.  OUTPUT is passed to the backend unchanged.  For
     example, it may be a string (for file based outputs) or a socket
     (for network based output).

 -- Function: ly:book-scores book
     Return scores in BOOK.

 -- Function: ly:book-set-header! book module
     Set the book header.

 -- Function: ly:box? x
     Is X a `Box' object?

 -- Function: ly:bp num
     NUM bigpoints (1/72th inch).

 -- Function: ly:bracket a iv t p
     Make a bracket in direction A.  The extent of the bracket is given
     by IV.  The wings protrude by an amount of P, which may be
     negative.  The thickness is given by T.

 -- Function: ly:broadcast disp ev
     Send the stream event EV to the dispatcher DISP.

 -- Function: ly:camel-case->lisp-identifier name-sym
     Convert `FooBar_Bla' to `foo-bar-bla' style symbol.

 -- Function: ly:chain-assoc-get key achain default-value
          strict-checking
     Return value for KEY from a list of alists ACHAIN.  If no entry is
     found, return DEFAULT-VALUE or `#f' if DEFAULT-VALUE is not
     specified.  With STRICT-CHECKING set to `#t', a programming_error
     is output in such cases.

 -- Function: ly:check-expected-warnings
     Check whether all expected warnings have really been triggered.

 -- Function: ly:cm num
     NUM cm.

 -- Function: ly:command-line-code
     The Scheme code specified on command-line with `-e'.

 -- Function: ly:command-line-options
     The Scheme options specified on command-line with `-d'.

 -- Function: ly:connect-dispatchers to from
     Make the dispatcher TO listen to events from FROM.

 -- Function: ly:context? x
     Is X a `Context' object?

 -- Function: ly:context-current-moment context
     Return the current moment of CONTEXT.

 -- Function: ly:context-def? x
     Is X a `Context_def' object?

 -- Function: ly:context-def-lookup def sym val
     Return the value of SYM in context definition DEF (e.g.,
     `\Voice').  If no value is found, return VAL or `'()' if VAL is
     undefined. SYM can be any of `default-child', `consists',
     `description', `aliases', `accepts', `property-ops',
     `context-name', `group-type'.

 -- Function: ly:context-def-modify def mod
     Return the result of applying the context-mod MOD to the context
     definition DEF.  Does not change DEF.

 -- Function: ly:context-event-source context
     Return `event-source' of context CONTEXT.

 -- Function: ly:context-events-below context
     Return a `stream-distributor' that distributes all events from
     CONTEXT and all its subcontexts.

 -- Function: ly:context-find context name
     Find a parent of CONTEXT that has name or alias NAME.  Return `#f'
     if not found.

 -- Function: ly:context-grob-definition context name
     Return the definition of NAME (a symbol) within CONTEXT as an
     alist.

 -- Function: ly:context-id context
     Return the ID string of CONTEXT, i.e., for `\context Voice = "one"
     ...' return the string `one'.

 -- Function: ly:context-matched-pop-property context grob cell
     This undoes a particular `\override', `\once \override' or `\once
     \revert' when given the specific alist pair to undo.

 -- Function: ly:context-mod? x
     Is X a `Context_mod' object?

 -- Function: ly:context-mod-apply! context mod
     Apply the context modification MOD to CONTEXT.

 -- Function: ly:context-name context
     Return the name of CONTEXT, i.e., for `\context Voice = "one" ...'
     return the symbol `Voice'.

 -- Function: ly:context-now context
     Return `now-moment' of context CONTEXT.

 -- Function: ly:context-parent context
     Return the parent of CONTEXT, `#f' if none.

 -- Function: ly:context-property context sym def
     Return the value for property SYM in CONTEXT. If DEF is given, and
     property value is `'()', return DEF.

 -- Function: ly:context-property-where-defined context name
     Return the context above CONTEXT where NAME is defined.

 -- Function: ly:context-pushpop-property context grob eltprop val
     Do `\temporary \override' or `\revert' operation in CONTEXT.  The
     grob definition GROB is extended with ELTPROP (if VAL is
     specified) or reverted (if unspecified).

 -- Function: ly:context-set-property! context name val
     Set value of property NAME in context CONTEXT to VAL.

 -- Function: ly:context-unset-property context name
     Unset value of property NAME in context CONTEXT.

 -- Function: ly:debug str rest
     A Scheme callable function to issue a debug message STR.  The
     message is formatted with `format' and REST.

 -- Function: ly:default-scale
     Get the global default scale.

 -- Function: ly:dimension? d
     Return D as a number.  Used to distinguish length variables from
     normal numbers.

 -- Function: ly:dir? s
     Is S a direction?  Valid directions are `-1', `0', or `1', where
     `-1' represents left or down, `1' represents right or up, and `0'
     represents a neutral direction.

 -- Function: ly:disconnect-dispatchers to from
     Stop the dispatcher TO listening to events from FROM.

 -- Function: ly:dispatcher? x
     Is X a `Dispatcher' object?

 -- Function: ly:duration? x
     Is X a `Duration' object?

 -- Function: ly:duration<? p1 p2
     Is P1 shorter than P2?

 -- Function: ly:duration->string dur
     Convert DUR to a string.

 -- Function: ly:duration-dot-count dur
     Extract the dot count from DUR.

 -- Function: ly:duration-factor dur
     Extract the compression factor from DUR.  Return it as a pair.

 -- Function: ly:duration-length dur
     The length of the duration as a `moment'.

 -- Function: ly:duration-log dur
     Extract the duration log from DUR.

 -- Function: ly:duration-scale dur
     Extract the compression factor from DUR.  Return it as a rational.

 -- Function: ly:effective-prefix
     Return effective prefix.

 -- Function: ly:encode-string-for-pdf str
     Encode the given string to either Latin1 (which is a subset of the
     PDFDocEncoding) or if that's not possible to full UTF-16BE with
     Byte-Order-Mark (BOM).

 -- Function: ly:engraver-announce-end-grob engraver grob cause
     Announce the end of a grob (i.e., the end of a spanner)
     originating from given ENGRAVER instance, with GROB being a grob.
     CAUSE should either be another grob or a music event.

 -- Function: ly:engraver-make-grob engraver grob-name cause
     Create a grob originating from given ENGRAVER instance, with given
     GROB-NAME, a symbol.  CAUSE should either be another grob or a
     music event.

 -- Function: ly:error str rest
     A Scheme callable function to issue the error STR.  The error is
     formatted with `format' and REST.

 -- Function: ly:event? obj
     Is OBJ a proper (non-rhythmic) event object?

 -- Function: ly:event-deep-copy m
     Copy M and all sub expressions of M.

 -- Function: ly:event-property sev sym val
     Get the property SYM of stream event SEV.  If SYM is undefined,
     return VAL or `'()' if VAL is not specified.

 -- Function: ly:event-set-property! ev sym val
     Set property SYM in event EV to VAL.

 -- Function: ly:expand-environment str
     Expand `$VAR' and `${VAR}' in STR.

 -- Function: ly:expect-warning str rest
     A Scheme callable function to register a warning to be expected
     and subsequently suppressed.  If the warning is not encountered, a
     warning about the missing warning will be shown.  The message
     should be translated with `(_ ...)' and changing parameters given
     after the format string.

 -- Function: ly:find-file name
     Return the absolute file name of NAME, or `#f' if not found.

 -- Function: ly:font-config-add-directory dir
     Add directory DIR to FontConfig.

 -- Function: ly:font-config-add-font font
     Add font FONT to FontConfig.

 -- Function: ly:font-config-display-fonts
     Dump a list of all fonts visible to FontConfig.

 -- Function: ly:font-config-get-font-file name
     Get the file for font NAME.

 -- Function: ly:font-design-size font
     Given the font metric FONT, return the design size, relative to
     the current output-scale.

 -- Function: ly:font-file-name font
     Given the font metric FONT, return the corresponding file name.

 -- Function: ly:font-get-glyph font name
     Return a stencil from FONT for the glyph named NAME.  If the glyph
     is not available, return an empty stencil.

     Note that this command can only be used to access glyphs from
     fonts loaded with `ly:system-font-load'; currently, this means
     either the Emmentaler or Emmentaler-Brace  fonts, corresponding to
     the font encodings `fetaMusic' and `fetaBraces', respectively.

 -- Function: ly:font-glyph-name-to-charcode font name
     Return the character code for glyph NAME in FONT.

     Note that this command can only be used to access glyphs from
     fonts loaded with `ly:system-font-load'; currently, this means
     either the Emmentaler or Emmentaler-Brace fonts, corresponding to
     the font encodings `fetaMusic' and `fetaBraces', respectively.

 -- Function: ly:font-glyph-name-to-index font name
     Return the index for NAME in FONT.

     Note that this command can only be used to access glyphs from
     fonts loaded with `ly:system-font-load'; currently, this means
     either the Emmentaler or Emmentaler-Brace fonts, corresponding to
     the font encodings `fetaMusic' and `fetaBraces', respectively.

 -- Function: ly:font-index-to-charcode font index
     Return the character code for INDEX in FONT.

     Note that this command can only be used to access glyphs from
     fonts loaded with `ly:system-font-load'; currently, this means
     either the Emmentaler or Emmentaler-Brace fonts, corresponding to
     the font encodings `fetaMusic' and `fetaBraces', respectively.

 -- Function: ly:font-magnification font
     Given the font metric FONT, return the magnification, relative to
     the current output-scale.

 -- Function: ly:font-metric? x
     Is X a `Font_metric' object?

 -- Function: ly:font-name font
     Given the font metric FONT, return the corresponding name.

 -- Function: ly:font-sub-fonts font
     Given the font metric FONT of an OpenType font, return the names
     of the subfonts within FONT.

 -- Function: ly:format str rest
     LilyPond specific format, supporting `~a' and `~[0-9]f'.  Basic
     support for `~s' is also provided.

 -- Function: ly:format-output context
     Given a global context in its final state, process it and return
     the `Music_output' object in its final state.

 -- Function: ly:generic-bound-extent grob common
     Determine the extent of GROB relative to COMMON along the X axis,
     finding its extent as a bound when it a has
     `bound-alignment-interfaces' property list set and otherwise the
     full extent.

 -- Function: ly:get-all-function-documentation
     Get a hash table with all LilyPond Scheme extension functions.

 -- Function: ly:get-all-translators
     Return a list of all translator objects that may be instantiated.

 -- Function: ly:get-context-mods contextmod
     Returns the list of context modifications stored in CONTEXTMOD.

 -- Function: ly:get-option var
     Get a global option setting.

 -- Function: ly:get-spacing-spec from-scm to-scm
     Return the spacing spec going between the two given grobs,
     FROM_SCM and TO_SCM.

 -- Function: ly:get-undead undead
     Get back object from UNDEAD.

 -- Function: ly:gettext original
     A Scheme wrapper function for `gettext'.

 -- Function: ly:grob? x
     Is X a `Grob' object?

 -- Function: ly:grob-alist-chain grob global
     Get an alist chain for grob GROB, with GLOBAL as the global
     default.  If unspecified, `font-defaults' from the layout block is
     taken.

 -- Function: ly:grob-array? x
     Is X a `Grob_array' object?

 -- Function: ly:grob-array->list grob-arr
     Return the elements of GROB-ARR as a Scheme list.

 -- Function: ly:grob-array-length grob-arr
     Return the length of GROB-ARR.

 -- Function: ly:grob-array-ref grob-arr index
     Retrieve the INDEXth element of GROB-ARR.

 -- Function: ly:grob-basic-properties grob
     Get the immutable properties of GROB.

 -- Function: ly:grob-chain-callback grob proc sym
     Find the callback that is stored as property SYM of grob GROB and
     chain PROC to the head of this, meaning that it is called using
     GROB and the previous callback's result.

 -- Function: ly:grob-common-refpoint grob other axis
     Find the common refpoint of GROB and OTHER for AXIS.

 -- Function: ly:grob-common-refpoint-of-array grob others axis
     Find the common refpoint of GROB and OTHERS (a grob-array) for
     AXIS.

 -- Function: ly:grob-default-font grob
     Return the default font for grob GROB.

 -- Function: ly:grob-extent grob refp axis
     Get the extent in AXIS direction of GROB relative to the grob REFP.

 -- Function: ly:grob-get-vertical-axis-group-index grob
     Get the index of the vertical axis group the grob GROB belongs to;
     return `-1' if none is found.

 -- Function: ly:grob-interfaces grob
     Return the interfaces list of grob GROB.

 -- Function: ly:grob-layout grob
     Get `\layout' definition from grob GROB.

 -- Function: ly:grob-object grob sym
     Return the value of a pointer in grob GROB of property SYM.  It
     returns `'()' (end-of-list) if SYM is undefined in GROB.

 -- Function: ly:grob-original grob
     Return the unbroken original grob of GROB.

 -- Function: ly:grob-parent grob axis
     Get the parent of GROB.  AXIS is 0 for the X-axis, 1 for the
     Y-axis.

 -- Function: ly:grob-pq<? a b
     Compare two grob priority queue entries.  This is an internal
     function.

 -- Function: ly:grob-properties grob
     Get the mutable properties of GROB.

 -- Function: ly:grob-properties? x
     Is X a `Grob_properties' object?

 -- Function: ly:grob-property grob sym val
     Return the value for property SYM of GROB.  If no value is found,
     return VAL or `'()' if VAL is not specified.

 -- Function: ly:grob-property-data grob sym
     Return the value for property SYM of GROB, but do not process
     callbacks.

 -- Function: ly:grob-pure-height grob refp beg end val
     Return the pure height of GROB given refpoint REFP.  If no value
     is found, return VAL or `'()' if VAL is not specified.

 -- Function: ly:grob-pure-property grob sym beg end val
     Return the pure value for property SYM of GROB.  If no value is
     found, return VAL or `'()' if VAL is not specified.

 -- Function: ly:grob-relative-coordinate grob refp axis
     Get the coordinate in AXIS direction of GROB relative to the grob
     REFP.

 -- Function: ly:grob-robust-relative-extent grob refp axis
     Get the extent in AXIS direction of GROB relative to the grob
     REFP, or `(0,0)' if empty.

 -- Function: ly:grob-script-priority-less a b
     Compare two grobs by script priority.  For internal use.

 -- Function: ly:grob-set-nested-property! grob symlist val
     Set nested property SYMLIST in grob GROB to value VAL.

 -- Function: ly:grob-set-object! grob sym val
     Set SYM in grob GROB to value VAL.

 -- Function: ly:grob-set-parent! grob axis parent-grob
     Set PARENT-GROB the parent of grob GROB in axis AXIS.

 -- Function: ly:grob-set-property! grob sym val
     Set SYM in grob GROB to value VAL.

 -- Function: ly:grob-staff-position sg
     Return the Y-position of SG relative to the staff.

 -- Function: ly:grob-suicide! grob
     Kill GROB.

 -- Function: ly:grob-system grob
     Return the system grob of GROB.

 -- Function: ly:grob-translate-axis! grob d a
     Translate GROB on axis A over distance D.

 -- Function: ly:grob-vertical<? a b
     Does A lie above B on the page?

 -- Function: ly:gulp-file name size
     Read SIZE characters from the file NAME, and return its contents
     in a string.  If SIZE is undefined, the entire file is read.  The
     file is looked up using the search path.

 -- Function: ly:hash-table-keys tab
     Return a list of keys in TAB.

 -- Function: ly:inch num
     NUM inches.

 -- Function: ly:input-both-locations sip
     Return input location in SIP as `(file-name first-line
     first-column last-line last-column)'.

 -- Function: ly:input-file-line-char-column sip
     Return input location in SIP as `(file-name line char column)'.

 -- Function: ly:input-location? x
     Is X a `Input' object?

 -- Function: ly:input-message sip msg rest
     Print MSG as a GNU compliant error message, pointing to the
     location in SIP.  MSG is interpreted similar to `format''s
     argument, using REST.

 -- Function: ly:input-warning sip msg rest
     Print MSG as a GNU compliant warning message, pointing to the
     location in SIP.  MSG is interpreted similar to `format''s
     argument, using REST.

 -- Function: ly:interpret-music-expression mus ctx
     Interpret the music expression MUS in the global context CTX.  The
     context is returned in its final state.

 -- Function: ly:interpret-stencil-expression expr func arg1 offset
     Parse EXPR, feed bits to FUNC with first arg ARG1 having offset
     OFFSET.

 -- Function: ly:intlog2 d
     The 2-logarithm of 1/D.

 -- Function: ly:item? g
     Is G an `Item' object?

 -- Function: ly:item-break-dir it
     The break status direction of item IT.  `-1' means end of line,
     `0' unbroken, and `1' beginning of line.

 -- Function: ly:item-get-column it
     Return the `PaperColumn' or `NonMusicalPaperColumn' associated
     with this `Item'.

 -- Function: ly:iterator? x
     Is X a `Music_iterator' object?

 -- Function: ly:lexer-keywords lexer
     Return a list of `(KEY . CODE)' pairs, signifying the LilyPond
     reserved words list.

 -- Function: ly:lily-lexer? x
     Is X a `Lily_lexer' object?

 -- Function: ly:lily-parser? x
     Is X a `Lily_parser' object?

 -- Function: ly:line-interface::line grob startx starty endx endy
     Make a line using layout information from grob GROB.

 -- Function: ly:listened-event-class? disp cl
     Does DISP listen to any event type in the list CL?

 -- Function: ly:listened-event-types disp
     Return a list of all event types that DISP listens to.

 -- Function: ly:listener? x
     Is X a `Listener' object?

 -- Function: ly:make-book paper header scores
     Make a `\book' of PAPER and HEADER (which may be `#f' as well)
     containing `\scores'.

 -- Function: ly:make-book-part scores
     Make a `\bookpart' containing `\scores'.

 -- Function: ly:make-context-mod mod-list
     Creates a context modification, optionally initialized via the
     list of modifications MOD-LIST.

 -- Function: ly:make-dispatcher
     Return a newly created dispatcher.

 -- Function: ly:make-duration length dotcount num den
     LENGTH is the negative logarithm (base 2) of the duration: 1 is a
     half note, 2 is a quarter note, 3 is an eighth note, etc.  The
     number of dots after the note is given by the optional argument
     DOTCOUNT.

     The duration factor is optionally given by integers NUM and DEN,
     alternatively by a single rational number.

     A duration is a musical duration, i.e., a length of time described
     by a power of two (whole, half, quarter, etc.) and a number of
     augmentation dots.

 -- Function: ly:make-global-context output-def
     Set up a global interpretation context, using the output block
     OUTPUT-DEF.  The context is returned.

 -- Function: ly:make-global-translator global
     Create a translator group and connect it to the global context
     GLOBAL.  The translator group is returned.

 -- Function: ly:make-grob-properties alist
     This packages the given property list ALIST in a grob property
     container stored in a context property with the name of a grob.

 -- Function: ly:make-moment m g gn gd
     Create the moment with rational main timing M, and optional grace
     timing G.

     A "moment" is a point in musical time.  It consists of a pair of
     rationals (M, G), where M is the timing for the main notes, and G
     the timing for grace notes.  In absence of grace notes, G is zero.

     For compatibility reasons, it is possible to write two numbers
     specifying numerator and denominator instead of the rationals.
     These forms cannot be mixed, and the two-argument form is
     disambiguated by the sign of the second argument: if it is
     positive, it can only be a denominator and not a grace timing.

 -- Function: ly:make-music props
     Make a C++ `Music' object and initialize it with PROPS.

     This function is for internal use and is only called by
     `make-music', which is the preferred interface for creating music
     objects.

 -- Function: ly:make-music-function signature func
     Make a function to process music, to be used for the parser.  FUNC
     is the function, and SIGNATURE describes its arguments.
     SIGNATURE's cdr is a list containing either `ly:music?' predicates
     or other type predicates.  Its car is the syntax function to call.

 -- Function: ly:make-music-relative! music pitch
     Make MUSIC relative to PITCH, return final pitch.

 -- Function: ly:make-output-def
     Make an output definition.

 -- Function: ly:make-page-label-marker label
     Return page marker with label LABEL.

 -- Function: ly:make-page-permission-marker symbol permission
     Return page marker with page breaking and turning permissions.

 -- Function: ly:make-pango-description-string chain size
     Make a `PangoFontDescription' string for the property alist CHAIN
     at size SIZE.

 -- Function: ly:make-paper-outputter port format
     Create an outputter that evaluates within `output-'FORMAT, writing
     to PORT.

 -- Function: ly:make-pitch octave note alter
     OCTAVE is specified by an integer, zero for the octave containing
     middle C.  NOTE is a number indexing the global default scale,
     with 0 corresponding to pitch C and 6 usually corresponding to
     pitch B.  Optional ALTER is a rational number of 200-cent whole
     tones for alteration.

 -- Function: ly:make-prob type init rest
     Create a `Prob' object.

 -- Function: ly:make-scale steps
     Create a scale.  The argument is a vector of rational numbers,
     each of which represents the number of 200 cent tones of a pitch
     above the tonic.

 -- Function: ly:make-score music
     Return score with MUSIC encapsulated in it.

 -- Function: ly:make-spring ideal min-dist
     Make a spring.  IDEAL is the ideal distance of the spring, and
     MIN-DIST is the minimum distance.

 -- Function: ly:make-stencil expr xext yext
     Stencils are device independent output expressions.  They carry
     two pieces of information:

       1. A specification of how to print this object.  This
          specification is processed by the output backends, for
          example `scm/output-ps.scm'.

       2. The vertical and horizontal extents of the object, given as
          pairs.  If an extent is unspecified (or if you use
          `empty-interval' as its value), it is taken to be empty.


 -- Function: ly:make-stream-event cl proplist
     Create a stream event of class CL with the given mutable property
     list.

 -- Function: ly:make-undead object
     This packages OBJECT in a manner that keeps it from triggering
     "Parsed object should be dead" messages.

 -- Function: ly:make-unpure-pure-container unpure pure
     Make an unpure-pure container.  UNPURE should be an unpure
     expression, and PURE should be a pure expression.  If PURE is
     omitted, the value of UNPURE will be used twice, except that a
     callback is given two extra arguments that are ignored for the
     sake of pure calculations.

 -- Function: ly:message str rest
     A Scheme callable function to issue the message STR.  The message
     is formatted with `format' and REST.

 -- Function: ly:minimal-breaking pb
     Break (pages and lines) the `Paper_book' object PB without looking
     for optimal spacing: stack as many lines on a page before moving
     to the next one.

 -- Function: ly:mm num
     NUM mm.

 -- Function: ly:module->alist mod
     Dump the contents of module MOD as an alist.

 -- Function: ly:module-copy dest src
     Copy all bindings from module SRC into DEST.

 -- Function: ly:modules-lookup modules sym def
     Look up SYM in the list MODULES, returning the first occurence.
     If not found, return DEF or `#f' if DEF isn't specified.

 -- Function: ly:moment? x
     Is X a `Moment' object?

 -- Function: ly:moment<? a b
     Compare two moments.

 -- Function: ly:moment-add a b
     Add two moments.

 -- Function: ly:moment-div a b
     Divide two moments.

 -- Function: ly:moment-grace mom
     Extract grace timing as a rational number from MOM.

 -- Function: ly:moment-grace-denominator mom
     Extract denominator from grace timing.

 -- Function: ly:moment-grace-numerator mom
     Extract numerator from grace timing.

 -- Function: ly:moment-main mom
     Extract main timing as a rational number from MOM.

 -- Function: ly:moment-main-denominator mom
     Extract denominator from main timing.

 -- Function: ly:moment-main-numerator mom
     Extract numerator from main timing.

 -- Function: ly:moment-mod a b
     Modulo of two moments.

 -- Function: ly:moment-mul a b
     Multiply two moments.

 -- Function: ly:moment-sub a b
     Subtract two moments.

 -- Function: ly:music? obj
     Is OBJ a music object?

 -- Function: ly:music-compress m factor
     Compress music object M by moment FACTOR.

 -- Function: ly:music-deep-copy m origin
     Copy M and all sub expressions of M. M may be an arbitrary type;
     cons cells and music are copied recursively.  If ORIGIN is given,
     it is used as the origin for one level of music by calling
     `ly:set-origin!' on the copy.

 -- Function: ly:music-duration-compress mus fact
     Compress MUS by factor FACT, which is a `Moment'.

 -- Function: ly:music-duration-length mus
     Extract the duration field from MUS and return the length.

 -- Function: ly:music-function? x
     Is X a `Music_function' object?

 -- Function: ly:music-function-extract x
     Return the Scheme function inside X.

 -- Function: ly:music-function-signature x
     Return the function signature inside X.

 -- Function: ly:music-length mus
     Get the length of music expression MUS and return it as a `Moment'
     object.

 -- Function: ly:music-list? lst
     Is LST a list of music objects?

 -- Function: ly:music-mutable-properties mus
     Return an alist containing the mutable properties of MUS.  The
     immutable properties are not available, since they are constant
     and initialized by the `make-music' function.

 -- Function: ly:music-output? x
     Is X a `Music_output' object?

 -- Function: ly:music-property mus sym val
     Return the value for property SYM of music expression MUS.  If no
     value is found, return VAL or `'()' if VAL is not specified.

 -- Function: ly:music-set-property! mus sym val
     Set property SYM in music expression MUS to VAL.

 -- Function: ly:music-transpose m p
     Transpose M such that central C is mapped to P.  Return M.

 -- Function: ly:note-column-accidentals note-column
     Return the `AccidentalPlacement' grob from NOTE-COLUMN if any, or
     `SCM_EOL' otherwise.

 -- Function: ly:note-column-dot-column note-column
     Return the `DotColumn' grob from NOTE-COLUMN if any, or `SCM_EOL'
     otherwise.

 -- Function: ly:note-head::stem-attachment font-metric glyph-name
     Get attachment in FONT-METRIC for attaching a stem to notehead
     GLYPH-NAME.

 -- Function: ly:number->string s
     Convert S to a string without generating many decimals.

 -- Function: ly:one-line-breaking pb
     Put each score on a single line, and put each line on its own
     page.  The paper-width setting will be modified so that every page
     will be wider than the widest line.

 -- Function: ly:optimal-breaking pb
     Optimally break (pages and lines) the `Paper_book' object PB to
     minimize badness in bother vertical and horizontal spacing.

 -- Function: ly:option-usage port
     Print `ly:set-option' usage.  Optional PORT argumentfor the
     destination defaults to current output port.

 -- Function: ly:otf->cff otf-file-name
     Convert the contents of an OTF file to a CFF file, returning it as
     a string.

 -- Function: ly:otf-font? font
     Is FONT an OpenType font?

 -- Function: ly:otf-font-glyph-info font glyph
     Given the font metric FONT of an OpenType font, return the
     information about named glyph GLYPH (a string).

 -- Function: ly:otf-font-table-data font tag
     Extract a table TAG from FONT.  Return empty string for
     non-existent TAG.

 -- Function: ly:otf-glyph-count font
     Return the number of glyphs in FONT.

 -- Function: ly:otf-glyph-list font
     Return a list of glyph names for FONT.

 -- Function: ly:output-def? x
     Is X a `Output_def' object?

 -- Function: ly:output-def-clone def
     Clone output definition DEF.

 -- Function: ly:output-def-lookup def sym val
     Return the value of SYM in output definition DEF (e.g., `\paper').
     If no value is found, return VAL or `'()' if VAL is undefined.

 -- Function: ly:output-def-parent def
     Return the parent output definition of DEF.

 -- Function: ly:output-def-scope def
     Return the variable scope inside DEF.

 -- Function: ly:output-def-set-variable! def sym val
     Set an output definition DEF variable SYM to VAL.

 -- Function: ly:output-description output-def
     Return the description of translators in OUTPUT-DEF.

 -- Function: ly:output-find-context-def output-def context-name
     Return an alist of all context defs (matching CONTEXT-NAMEif
     given) in OUTPUT-DEF.

 -- Function: ly:output-formats
     Formats passed to `--format' as a list of strings, used for the
     output.

 -- Function: ly:outputter-close outputter
     Close port of OUTPUTTER.

 -- Function: ly:outputter-dump-stencil outputter stencil
     Dump stencil EXPR onto OUTPUTTER.

 -- Function: ly:outputter-dump-string outputter str
     Dump STR onto OUTPUTTER.

 -- Function: ly:outputter-module outputter
     Return output module of OUTPUTTER.

 -- Function: ly:outputter-output-scheme outputter expr
     Eval EXPR in module of OUTPUTTER.

 -- Function: ly:outputter-port outputter
     Return output port for OUTPUTTER.

 -- Function: ly:page-marker? x
     Is X a `Page_marker' object?

 -- Function: ly:page-turn-breaking pb
     Optimally break (pages and lines) the `Paper_book' object PB such
     that page turns only happen in specified places, returning its
     pages.

 -- Function: ly:pango-font? f
     Is F a pango font?

 -- Function: ly:pango-font-physical-fonts f
     Return alist of `(ps-name file-name font-index)' lists for Pango
     font F.

 -- Function: ly:paper-book? x
     Is X a `Paper_book' object?

 -- Function: ly:paper-book-header pb
     Return the header definition (`\header') in `Paper_book' object PB.

 -- Function: ly:paper-book-pages pb
     Return pages in `Paper_book' object PB.

 -- Function: ly:paper-book-paper pb
     Return the paper output definition (`\paper') in `Paper_book'
     object PB.

 -- Function: ly:paper-book-performances pb
     Return performances in `Paper_book' object PB.

 -- Function: ly:paper-book-scopes pb
     Return scopes in `Paper_book' object PB.

 -- Function: ly:paper-book-systems pb
     Return systems in `Paper_book' object PB.

 -- Function: ly:paper-column::print
     Optional stencil for `PaperColumn' or`NonMusicalPaperColumn'.
     Draws the `rank number' of each column, its moment in time, a blue
     arrow showing the ideal distance, and a red arrow showing the
     minimum distance between columns.

 -- Function: ly:paper-fonts def
     Return a list containing the fonts from output definition DEF
     (e.g., `\paper').

 -- Function: ly:paper-get-font def chain
     Find a font metric in output definition DEF satisfying the
     font-qualifiers in alist chain CHAIN, and return it.  (An alist
     chain is a list of alists, containing grob properties.)

 -- Function: ly:paper-get-number def sym
     Return the value of variable SYM in output definition DEF as a
     double.

 -- Function: ly:paper-outputscale def
     Return the output-scale for output definition DEF.

 -- Function: ly:paper-score-paper-systems paper-score
     Return vector of `paper_system' objects from PAPER-SCORE.

 -- Function: ly:paper-system? obj
     Is OBJ a C++ `Prob' object of type `paper-system'?

 -- Function: ly:paper-system-minimum-distance sys1 sys2
     Measure the minimum distance between these two paper-systems,
     using their stored skylines if possible and falling back to their
     extents otherwise.

 -- Function: ly:parse-file name
     Parse a single `.ly' file.  Upon failure, throw `ly-file-failed'
     key.

 -- Function: ly:parse-string-expression parser-smob ly-code filename
          line
     Parse the string LY-CODE with PARSER-SMOB. Return the contained
     music expression. FILENAME and LINE are optional source indicators.

 -- Function: ly:parsed-undead-list!
     Return the list of objects that have been found live that should
     have been dead, and clear that list.

 -- Function: ly:parser-clear-error parser
     Clear error flag for PARSER, defaulting to current parser.

 -- Function: ly:parser-clone closures location
     Return a clone of current parser.  An association list of port
     positions to closures can be specified in CLOSURES in order to
     have `$' and `#' interpreted in their original lexical
     environment.  If LOCATION is a valid location, it becomes the
     source of all music expressions inside.

 -- Function: ly:parser-define! symbol val
     Bind SYMBOL to VAL in current parser's module.

 -- Function: ly:parser-error msg input
     Display an error message and make current parser fail. Without a
     current parser, trigger an ordinary error.

 -- Function: ly:parser-has-error? parser
     Does PARSER (defaulting to current parser) have an error flag?

 -- Function: ly:parser-include-string ly-code
     Include the string LY-CODE into the input stream for current
     parser.  Can only be used in immediate Scheme expressions (`$'
     instead of `#').

 -- Function: ly:parser-lexer parser
     Return the lexer for PARSER, defaulting to current parser

 -- Function: ly:parser-lookup symbol
     Look up SYMBOL in current parser's module.  Return `'()' if not
     defined.

 -- Function: ly:parser-output-name parser
     Return the base name of the output file.  If `parser' is left off,
     use currently active parser.

 -- Function: ly:parser-parse-string parser-smob ly-code
     Parse the string LY-CODE with PARSER-SMOB.  Upon failure, throw
     `ly-file-failed' key.

 -- Function: ly:parser-set-note-names names
     Replace current note names in parser.  NAMES is an alist of
     symbols.  This only has effect if the current mode is notes.

 -- Function: ly:performance-header performance
     Return header of performance.

 -- Function: ly:performance-set-header! performance module
     Set the performance header.

 -- Function: ly:performance-write performance filename name
     Write PERFORMANCE to FILENAME storing NAME as the name of the
     performance in the file metadata.

 -- Function: ly:pfb->pfa pfb-file-name
     Convert the contents of a Type 1 font in PFB format to PFA format.

 -- Function: ly:pitch? x
     Is X a `Pitch' object?

 -- Function: ly:pitch<? p1 p2
     Is P1 lexicographically smaller than P2?

 -- Function: ly:pitch-alteration pp
     Extract the alteration from pitch PP.

 -- Function: ly:pitch-diff pitch root
     Return pitch DELTA such that ROOT transposed by DELTA equals PITCH.

 -- Function: ly:pitch-negate p
     Negate P.

 -- Function: ly:pitch-notename pp
     Extract the note name from pitch PP.

 -- Function: ly:pitch-octave pp
     Extract the octave from pitch PP.

 -- Function: ly:pitch-quartertones pp
     Calculate the number of quarter tones of PP from middle C.

 -- Function: ly:pitch-semitones pp
     Calculate the number of semitones of PP from middle C.

 -- Function: ly:pitch-steps p
     Number of steps counted from middle C of the pitch P.

 -- Function: ly:pitch-tones pp
     Calculate the number of tones of PP from middle C as a rational
     number.

 -- Function: ly:pitch-transpose p delta
     Transpose P by the amount DELTA, where DELTA is relative to
     middle C.

 -- Function: ly:pointer-group-interface::add-grob grob sym grob-element
     Add GROB-ELEMENT to GROB's SYM grob array.

 -- Function: ly:position-on-line? sg spos
     Return whether SPOS is on a line of the staff associated with the
     grob SG (even on an extender line).

 -- Function: ly:prob? x
     Is X a `Prob' object?

 -- Function: ly:prob-immutable-properties prob
     Retrieve an alist of immutable properties.

 -- Function: ly:prob-mutable-properties prob
     Retrieve an alist of mutable properties.

 -- Function: ly:prob-property prob sym val
     Return the value for property SYM of Prob object PROB.  If no
     value is found, return VAL or `'()' if VAL is not specified.

 -- Function: ly:prob-property? obj sym
     Is boolean prop SYM of SYM set?

 -- Function: ly:prob-set-property! obj sym value
     Set property SYM of OBJ to VALUE.

 -- Function: ly:prob-type? obj type
     Is OBJ the specified prob-type?

 -- Function: ly:programming-error str rest
     A Scheme callable function to issue the internal warning  STR.
     The message is formatted with `format' and REST.

 -- Function: ly:progress str rest
     A Scheme callable function to print progress STR.  The message is
     formatted with `format' and REST.

 -- Function: ly:property-lookup-stats sym
     Return hash table with a property access corresponding to SYM.
     Choices are `prob', `grob', and `context'.

 -- Function: ly:protects
     Return hash of protected objects.

 -- Function: ly:pt num
     NUM printer points.

 -- Function: ly:pure-call data grob start end rest
     Convert property DATA (unpure-pure container or procedure) to
     value in a pure context defined by GROB, START, END, and possibly
     REST arguments.

 -- Function: ly:register-stencil-expression symbol
     Add SYMBOL as head of a stencil expression.

 -- Function: ly:relative-group-extent elements common axis
     Determine the extent of ELEMENTS relative to COMMON in the AXIS
     direction.

 -- Function: ly:reset-all-fonts
     Forget all about previously loaded fonts.

 -- Function: ly:round-filled-box xext yext blot
     Make a `Stencil' object that prints a black box of dimensions
     XEXT, YEXT and roundness BLOT.

 -- Function: ly:round-filled-polygon points blot extroversion
     Make a `Stencil' object that prints a black polygon with corners
     at the points defined by POINTS (list of coordinate pairs) and
     roundness BLOT.  OptionalEXTROVERSION shifts the outline outward,
     with thedefault of `-1.0' keeping the outer boundary ofthe outline
     just inside of the polygon.

 -- Function: ly:run-translator mus output-def
     Process MUS according to OUTPUT-DEF.  An interpretation context is
     set up, and MUS is interpreted with it.  The context is returned
     in its final state.

     Optionally, this routine takes an object-key to to uniquely
     identify the score block containing it.

 -- Function: ly:score? x
     Is X a `Score' object?

 -- Function: ly:score-add-output-def! score def
     Add an output definition DEF to SCORE.

 -- Function: ly:score-embedded-format score layout
     Run SCORE through LAYOUT (an output definition) scaled to correct
     output-scale already, returning a list of layout-lines.

 -- Function: ly:score-error? score
     Was there an error in the score?

 -- Function: ly:score-header score
     Return score header.

 -- Function: ly:score-music score
     Return score music.

 -- Function: ly:score-output-defs score
     All output definitions in a score.

 -- Function: ly:score-set-header! score module
     Set the score header.

 -- Function: ly:separation-item::print
     Optional stencil for `PaperColumn' or`NonMusicalPaperColumn'.
     Draws the `horizontal-skylines' of each `PaperColumn', showing the
     shapes used to determine the minimum distances between
     `PaperColumns' at the note-spacing step, before staves have been
     spaced (vertically) on the page.

 -- Function: ly:set-default-scale scale
     Set the global default scale.  This determines the tuning of
     pitches with no accidentals or key signatures.  The first pitch is
     C.  Alterations are calculated relative to this scale.  The number
     of pitches in this scale determines the number of scale steps that
     make up an octave.  Usually the 7-note major scale.

 -- Function: ly:set-grob-modification-callback cb
     Specify a procedure that will be called every time LilyPond
     modifies a grob property.  The callback will receive as arguments
     the grob that is being modified, the name of the C++ file in which
     the modification was requested, the line number in the C++ file in
     which the modification was requested, the name of the function in
     which the modification was requested, the property to be changed,
     and the new value for the property.

 -- Function: ly:set-middle-C! context
     Set the `middleCPosition' variable in CONTEXT based on the
     variables `middleCClefPosition' and `middleCOffset'.

 -- Function: ly:set-option var val
     Set a program option.

 -- Function: ly:set-origin! m origin
     This sets the origin given in ORIGIN to M.  M will typically be a
     music expression or a list of music.  List structures are searched
     recursively, but recursion stops at the changed music expressions
     themselves.  ORIGIN is generally of type `ly:input-location?',
     defaulting to `(*location*)'.  Other valid values for `origin' are
     a music expression which is then used as the source of location
     information, or `#f' or `'()' in which case no action is
     performed.  The return value is M itself.

 -- Function: ly:set-property-cache-callback cb
     Specify a procedure that will be called whenever lilypond
     calculates a callback function and caches the result.  The
     callback will receive as arguments the grob whose property it is,
     the name of the property, the name of the callback that calculated
     the property, and the new (cached) value of the property.

 -- Function: ly:skyline? x
     Is X a `Skyline' object?

 -- Function: ly:skyline-empty? sky
     Return whether SKY is empty.

 -- Function: ly:skyline-pair? x
     Is X a `Skyline_pair' object?

 -- Function: ly:slur-score-count
     count number of slur scores.

 -- Function: ly:smob-protects
     Return LilyPond's internal smob protection list.

 -- Function: ly:solve-spring-rod-problem springs rods length ragged
     Solve a spring and rod problem for COUNT objects, that are
     connected by COUNT-1 SPRINGS, and an arbitrary number of RODS.
     COUNT is implicitly given by SPRINGS and RODS.  The SPRINGS
     argument has the format `(ideal, inverse_hook)' and RODS is of the
     form `(idx1, idx2, distance)'.

     LENGTH is a number, RAGGED a boolean.

     The function returns a list containing the force (positive for
     stretching, negative for compressing and `#f' for non-satisfied
     constraints) followed by SPRING-COUNT+1 positions of the objects.

 -- Function: ly:source-file? x
     Is X a `Source_file' object?

 -- Function: ly:spanner? g
     Is G a spanner object?

 -- Function: ly:spanner-bound spanner dir
     Get one of the bounds of SPANNER.  DIR is `-1' for left, and `1'
     for right.

 -- Function: ly:spanner-broken-into spanner
     Return broken-into list for SPANNER.

 -- Function: ly:spanner-set-bound! spanner dir item
     Set grob ITEM as bound in direction DIR for SPANNER.

 -- Function: ly:spawn command rest
     Simple interface to g_spawn_sync STR.  The error is formatted with
     `format' and REST.

 -- Function: ly:spring? x
     Is X a `Spring' object?

 -- Function: ly:spring-set-inverse-compress-strength! spring strength
     Set the inverse compress STRENGTH of SPRING.

 -- Function: ly:spring-set-inverse-stretch-strength! spring strength
     Set the inverse stretch STRENGTH of SPRING.

 -- Function: ly:staff-symbol-line-thickness grob
     Returns the current staff-line thickness in the staff associated
     with GROB, expressed as a multiple of the current staff-space
     height.

 -- Function: ly:staff-symbol-staff-radius grob
     Returns the radius of the staff associated with GROB.

 -- Function: ly:staff-symbol-staff-space grob
     Returns the current staff-space height in the staff associated
     with GROB, expressed as a multiple of the default height of a
     staff-space in the traditional five-line staff.

 -- Function: ly:start-environment
     Return the environment (a list of strings) that was in effect at
     program start.

 -- Function: ly:stderr-redirect file-name mode
     Redirect stderr to FILE-NAME, opened with MODE.

 -- Function: ly:stencil? x
     Is X a `Stencil' object?

 -- Function: ly:stencil-add args
     Combine stencils.  Takes any number of arguments.

 -- Function: ly:stencil-aligned-to stil axis dir
     Align STIL using its own extents.  DIR is a number.  `-1' and `1'
     are left and right, respectively.  Other values are interpolated
     (so `0' means the center).

 -- Function: ly:stencil-combine-at-edge first axis direction second
          padding
     Construct a stencil by putting SECOND next to FIRST.  AXIS can be
     0 (x-axis) or 1 (y-axis).  DIRECTION can be -1 (left or down) or 1
     (right or up).  The stencils are juxtaposed with PADDING as extra
     space.  FIRST and SECOND may also be `'()' or `#f'.

 -- Function: ly:stencil-empty? stil axis
     Return whether STIL is empty.  If an optional AXIS is supplied,
     the emptiness check is restricted to that axis.

 -- Function: ly:stencil-expr stil
     Return the expression of STIL.

 -- Function: ly:stencil-extent stil axis
     Return a pair of numbers signifying the extent of STIL in AXIS
     direction (`0' or `1' for x and y axis, respectively).

 -- Function: ly:stencil-fonts s
     Analyze S, and return a list of fonts used in S.

 -- Function: ly:stencil-in-color stc r g b
     Put STC in a different color.

 -- Function: ly:stencil-rotate stil angle x y
     Return a stencil STIL rotated ANGLE degrees around the relative
     offset (X, Y).  E.g., an offset of (-1, 1) will rotate the stencil
     around the left upper corner.

 -- Function: ly:stencil-rotate-absolute stil angle x y
     Return a stencil STIL rotated ANGLE degrees around point (X, Y),
     given in absolute coordinates.

 -- Function: ly:stencil-scale stil x y
     Scale stencil STIL using the horizontal and vertical scaling
     factors X and Y.  Negative values will flip or mirror STIL without
     changing its origin; this may result in collisions unless it is
     repositioned.

 -- Function: ly:stencil-stack first axis direction second padding
          mindist
     Construct a stencil by stacking SECOND next to FIRST.  AXIS can be
     0 (x-axis) or 1 (y-axis).  DIRECTION can be -1 (left or down) or 1
     (right or up).  The stencils are juxtaposed with PADDING as extra
     space.  FIRST and SECOND may also be `'()' or `#f'.  As opposed to
     `ly:stencil-combine-at-edge', metrics are suited for successively
     accumulating lines of stencils.  Also, SECOND stencil is drawn
     last.

     If MINDIST is specified, reference points are placed apart at
     least by this distance.  If either of the stencils is spacing,
     PADDING and MINDIST do not apply.

 -- Function: ly:stencil-translate stil offset
     Return a STIL, but translated by OFFSET (a pair of numbers).

 -- Function: ly:stencil-translate-axis stil amount axis
     Return a copy of STIL but translated by AMOUNT in AXIS direction.

 -- Function: ly:stream-event? obj
     Is `OBJ' a `Stream_event' object?

 -- Function: ly:string-percent-encode str
     Encode all characters in string STR with hexadecimal percent
     escape sequences, with the following exceptions: characters `-',
     `.', `/', and `_'; and characters in ranges `0-9', `A-Z', and
     `a-z'.

 -- Function: ly:string-substitute a b s
     Replace string A by string B in string S.

 -- Function: ly:system-font-load name
     Load the OpenType system font `NAME.otf'.  Fonts loaded with this
     command must contain three additional SFNT font tables called
     `LILC', `LILF', and `LILY', needed for typesetting musical
     elements.  Currently, only the Emmentaler and the Emmentaler-Brace
     fonts fulfill these requirements.

     Note that only `ly:font-get-glyph' and derived code (like
     `\lookup') can access glyphs from the system fonts; text strings
     are handled exclusively via the Pango interface.

 -- Function: ly:text-interface::interpret-markup
     Convert a text markup into a stencil.  Takes three arguments,
     LAYOUT, PROPS, and MARKUP.

     LAYOUT is a `\layout' block; it may be obtained from a grob with
     `ly:grob-layout'.  PROPS is an alist chain, i.e. a list of
     alists.  This is typically obtained with `(ly:grob-alist-chain
     grob (ly:output-def-lookup layout 'text-font-defaults))'.  MARKUP
     is the markup text to be processed.

 -- Function: ly:translate-cpp-warning-scheme str
     Translates a string in C++ printf format and modifies it to use it
     for scheme formatting.

 -- Function: ly:translator? x
     Is X a `Translator' object?

 -- Function: ly:translator-context trans
     Return the context of the translator object TRANS.

 -- Function: ly:translator-description me
     Return an alist of properties of translator ME.

 -- Function: ly:translator-group? x
     Is X a `Translator_group' object?

 -- Function: ly:translator-name trans
     Return the type name of the translator object TRANS.  The name is
     a symbol.

 -- Function: ly:transpose-key-alist l pit
     Make a new key alist of L transposed by pitch PIT.

 -- Function: ly:truncate-list! lst i
     Take at most the first I of list LST.

 -- Function: ly:ttf->pfa ttf-file-name idx
     Convert the contents of a TrueType font file to PostScript Type 42
     font, returning it as a string.  The optional IDX argument is
     useful for TrueType collections (TTC) only; it specifies the font
     index within the TTC.  The default value of IDX is 0.

 -- Function: ly:ttf-ps-name ttf-file-name idx
     Extract the PostScript name from a TrueType font.  The optional
     IDX argument is useful for TrueType collections (TTC) only; it
     specifies the font index within the TTC.  The default value of IDX
     is 0.

 -- Function: ly:undead? x
     Is X a `Undead' object?

 -- Function: ly:unit
     Return the unit used for lengths as a string.

 -- Function: ly:unpure-call data grob rest
     Convert property DATA (unpure-pure container or procedure) to
     value in an unpure context defined by GROB and possibly REST
     arguments.

 -- Function: ly:unpure-pure-container? x
     Is X a `Unpure_pure_container' object?

 -- Function: ly:unpure-pure-container-pure-part pc
     Return the pure part of PC.

 -- Function: ly:unpure-pure-container-unpure-part pc
     Return the unpure part of PC.

 -- Function: ly:usage
     Print usage message.

 -- Function: ly:verbose-output?
     Was verbose output requested, i.e. loglevel at least `DEBUG'?

 -- Function: ly:version
     Return the current lilypond version as a list, e.g., `(1 3 127
     uu1)'.

 -- Function: ly:warning str rest
     A Scheme callable function to issue the warning STR.  The message
     is formatted with `format' and REST.

 -- Function: ly:warning-located location str rest
     A Scheme callable function to issue the warning STR at the
     specified location in an input file.  The message is formatted
     with `format' and REST.

 -- Function: ly:wide-char->utf-8 wc
     Encode the Unicode codepoint WC, an integer, as UTF-8.


File: lilypond-notation.info,  Node: Cheat sheet,  Next: GNU Free Documentation License,  Prev: Notation manual tables,  Up: Top

Appendix B Cheat sheet
**********************

Syntax                    Description            Example
`1 2 8 16'                durations               [image src="lilypond/a7/lily-f3afef3a.png" alt="[image of music]" text="[image of music]" ]
`c4. c4..'                augmentation dots       [image src="lilypond/7d/lily-49b544ae.png" alt="[image of music]" text="[image of music]" ]
`c d e f g a b '          scale                   [image src="lilypond/3a/lily-d0f02014.png" alt="[image of music]" text="[image of music]" ]
`fis bes'                 alteration              [image src="lilypond/53/lily-49574969.png" alt="[image of music]" text="[image of music]" ]
`\clef treble \clef bass  clefs                   [image src="lilypond/8c/lily-d9290c41.png" alt="[image of music]" text="[image of music]" ]
'                                                
`\time 3/4 \time 4/4 '    time signature          [image src="lilypond/e4/lily-54920ce6.png" alt="[image of music]" text="[image of music]" ]
`r4 r8'                   rest                    [image src="lilypond/6d/lily-13250dec.png" alt="[image of music]" text="[image of music]" ]
`d ~ d'                   tie                     [image src="lilypond/76/lily-ba034041.png" alt="[image of music]" text="[image of music]" ]
`\key es \major '         key signature           [image src="lilypond/08/lily-3f659613.png" alt="[image of music]" text="[image of music]" ]
NOTE`''                   raise octave            [image src="lilypond/5d/lily-106ac42b.png" alt="[image of music]" text="[image of music]" ]
NOTE`,'                   lower octave            [image src="lilypond/1f/lily-db5edf8a.png" alt="[image of music]" text="[image of music]" ]
`c( d e)'                 slur                    [image src="lilypond/79/lily-2eb948de.png" alt="[image of music]" text="[image of music]" ]
`c\( c( d) e\)'           phrasing slur           [image src="lilypond/f1/lily-46c2cb52.png" alt="[image of music]" text="[image of music]" ]
`a8[ b]'                  beam                    [image src="lilypond/ae/lily-7a71e3a4.png" alt="[image of music]" text="[image of music]" ]
`<< \new Staff ... >>'    more staves             [image src="lilypond/f6/lily-dee1d7b1.png" alt="[image of music]" text="[image of music]" ]
`c-> c-.'                 articulations           [image src="lilypond/7f/lily-f6eef2e9.png" alt="[image of music]" text="[image of music]" ]
`c2\mf c\sfz'             dynamics                [image src="lilypond/1d/lily-c9c722a6.png" alt="[image of music]" text="[image of music]" ]
`a\< a a\!'               crescendo               [image src="lilypond/ed/lily-460def26.png" alt="[image of music]" text="[image of music]" ]
`a\> a a\!'               decrescendo             [image src="lilypond/3c/lily-ebc0a4d8.png" alt="[image of music]" text="[image of music]" ]
`< >'                     chord                   [image src="lilypond/6a/lily-93bc84c9.png" alt="[image of music]" text="[image of music]" ]
`\partial 8'              pickup / upbeat         [image src="lilypond/6b/lily-70f697ef.png" alt="[image of music]" text="[image of music]" ]
`\tuplet 3/2 {f g a}'     triplets                [image src="lilypond/a2/lily-19ae1780.png" alt="[image of music]" text="[image of music]" ]
`\grace'                  grace notes             [image src="lilypond/ff/lily-e70fb1df.png" alt="[image of music]" text="[image of music]" ]
`\lyricmode { twinkle }'  entering lyrics        twinkle
`\new Lyrics'             printing lyrics         [image src="lilypond/b7/lily-79e78e46.png" alt="[image of music]" text="[image of music]" ]
`twin -- kle'             lyric hyphen            [image src="lilypond/e7/lily-ba95a97e.png" alt="[image of music]" text="[image of music]" ]
`\chordmode { c:dim       chords                  [image src="lilypond/1a/lily-71af9815.png" alt="[image of music]" text="[image of music]" ]
f:maj7 }'                                        
`\new ChordNames'         printing chord names    [image src="lilypond/9b/lily-2f2a65ec.png" alt="[image of music]" text="[image of music]" ]
`<<{e f} \\ {c d}>>'      polyphony               [image src="lilypond/61/lily-b71662b4.png" alt="[image of music]" text="[image of music]" ]
`s4 s8 s16'               spacer rests           


File: lilypond-notation.info,  Node: GNU Free Documentation License,  Next: LilyPond command index,  Prev: Cheat sheet,  Up: Top

Appendix C GNU Free Documentation License
*****************************************

                     Version 1.3, 3 November 2008

Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
`http://fsf.org/'

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.
     We recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it
     can be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You
     accept the license if you copy, modify or distribute the work in a
     way requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in
     the notice that says that the Document is released under this
     License.  If a section does not fit the above definition of
     Secondary then it is not allowed to be designated as Invariant.
     The Document may contain zero Invariant Sections.  If the Document
     does not identify any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images
     composed of pixels) generic paint programs or (for drawings) some
     widely available drawing editor, and that is suitable for input to
     text formatters or for automatic translation to a variety of
     formats suitable for input to text formatters.  A copy made in an
     otherwise Transparent file format whose markup, or absence of
     markup, has been arranged to thwart or discourage subsequent
     modification by readers is not Transparent.  An image format is
     not Transparent if used for any substantial amount of text.  A
     copy that is not "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and
     standard-conforming simple HTML, PostScript or PDF designed for
     human modification.  Examples of transparent image formats include
     PNG, XCF and JPG.  Opaque formats include proprietary formats that
     can be read and edited only by proprietary word processors, SGML or
     XML for which the DTD and/or processing tools are not generally
     available, and the machine-generated HTML, PostScript or PDF
     produced by some word processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     The "publisher" means any person or entity that distributes copies
     of the Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow
     the conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the
     title equally prominent and visible.  You may add other material
     on the covers in addition.  Copying with changes limited to the
     covers, as long as they preserve the title of the Document and
     satisfy these conditions, can be treated as verbatim copying in
     other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a
     machine-readable Transparent copy along with each Opaque copy, or
     state in or with each Opaque copy a computer-network location from
     which the general network-using public has access to download
     using public-standard network protocols a complete Transparent
     copy of the Document, free of added material.  If you use the
     latter option, you must take reasonably prudent steps, when you
     begin distribution of Opaque copies in quantity, to ensure that
     this Transparent copy will remain thus accessible at the stated
     location until at least one year after the last time you
     distribute an Opaque copy (directly or through your agents or
     retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of
     copies, to give them a chance to provide you with an updated
     version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with
     the Modified Version filling the role of the Document, thus
     licensing distribution and modification of the Modified Version to
     whoever possesses a copy of it.  In addition, you must do these
     things in the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of
          previous versions (which should, if there were any, be listed
          in the History section of the Document).  You may use the
          same title as a previous version if the original publisher of
          that version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on
          the Title Page.  If there is no section Entitled "History" in
          the Document, create one stating the title, year, authors,
          and publisher of the Document as given on its Title Page,
          then add an item describing the Modified Version as stated in
          the previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in
          the "History" section.  You may omit a network location for a
          work that was published at least four years before the
          Document itself, or if the original publisher of the version
          it refers to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the
          section all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document,
          unaltered in their text and in their titles.  Section numbers
          or the equivalent are not considered part of the section
          titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option
     designate some or all of these sections as invariant.  To do this,
     add their titles to the list of Invariant Sections in the Modified
     Version's license notice.  These titles must be distinct from any
     other section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end
     of the list of Cover Texts in the Modified Version.  Only one
     passage of Front-Cover Text and one of Back-Cover Text may be
     added by (or through arrangements made by) any one entity.  If the
     Document already includes a cover text for the same cover,
     previously added by you or by arrangement made by the same entity
     you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous
     publisher that added the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination
     all of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the
     documents in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow
     this License in all other respects regarding verbatim copying of
     that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of
     a storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense, or distribute it is void,
     and will automatically terminate your rights under this License.

     However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly
     and finally terminates your license, and (b) permanently, if the
     copyright holder fails to notify you of the violation by some
     reasonable means prior to 60 days after the cessation.

     Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from
     that copyright holder, and you cure the violation prior to 30 days
     after your receipt of the notice.

     Termination of your rights under this section does not terminate
     the licenses of parties who have received copies or rights from
     you under this License.  If your rights have been terminated and
     not permanently reinstated, receipt of a copy of some or all of
     the same material does not give you any rights to use it.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     `http://www.gnu.org/copyleft/'.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If
     the Document does not specify a version number of this License,
     you may choose any version ever published (not as a draft) by the
     Free Software Foundation.  If the Document specifies that a proxy
     can decide which future versions of this License can be used, that
     proxy's public statement of acceptance of a version permanently
     authorizes you to choose that version for the Document.

 11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any
     World Wide Web server that publishes copyrightable works and also
     provides prominent facilities for anybody to edit those works.  A
     public wiki that anybody can edit is an example of such a server.
     A "Massive Multiauthor Collaboration" (or "MMC") contained in the
     site means any set of copyrightable works thus published on the MMC
     site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0
     license published by Creative Commons Corporation, a not-for-profit
     corporation with a principal place of business in San Francisco,
     California, as well as future copyleft versions of that license
     published by that same organization.

     "Incorporate" means to publish or republish a Document, in whole or
     in part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this
     License, and if all works that were first published under this
     License somewhere other than this MMC, and subsequently
     incorporated in whole or in part into the MMC, (1) had no cover
     texts or invariant sections, and (2) were thus incorporated prior
     to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the
     site under CC-BY-SA on the same site at any time before August 1,
     2009, provided the MMC is eligible for relicensing.


ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

  Copyright (C)  YEAR  YOUR NAME.
  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.3
  or any later version published by the Free Software Foundation;
  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
  Texts.  A copy of the license is included in the section entitled ``GNU
  Free Documentation License''.

   If you have Invariant Sections, Front-Cover Texts and Back-Cover
Texts, replace the "with...Texts." line with this:

    with the Invariant Sections being LIST THEIR TITLES, with
    the Front-Cover Texts being LIST, and with the Back-Cover Texts
    being LIST.

   If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

   If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License, to
permit their use in free software.


File: lilypond-notation.info,  Node: LilyPond command index,  Next: LilyPond index,  Prev: GNU Free Documentation License,  Up: Top

Appendix D LilyPond command index
*********************************

This index lists all the LilyPond commands and keywords with links to
those sections of the manual which describe or discuss their use.  Each
link is in two parts.  The first part points to the exact location in
the manual where the command or keyword appears; the second part points
to the start of the section of the manual in which the command or
keyword appears.

 [index ]
* Menu:

* !:                                     Accidentals.         (line  39)
* "|":                                   Bar and bar number checks.
                                                              (line  38)
* ':                                     Absolute octave entry.
                                                              (line  18)
* ,:                                     Absolute octave entry.
                                                              (line  18)
* -:                                     Articulations and ornamentations.
                                                              (line   6)
* .:                                     Durations.           (line  55)
* /:                                     Extended and altered chords.
                                                              (line  94)
* /+:                                    Extended and altered chords.
                                                              (line 104)
* ::                                     Tremolo repeats.     (line  43)
* <:                                     Chorded notes.       (line   6)
* <...>:                                 Chorded notes.       (line   6)
* =:                                     Octave checks.       (line   6)
* >:                                     Chorded notes.       (line   6)
* ?:                                     Accidentals.         (line  39)
* [:                                     Manual beams.        (line   6)
* \!:                                    Dynamics.            (line  21)
* \(:                                    Phrasing slurs.      (line   6)
* \):                                    Phrasing slurs.      (line   6)
* \<:                                    Dynamics.            (line  21)
* \= <1>:                                Available music functions.
                                                              (line 708)
* \=:                                    Slurs.               (line  22)
* \>:                                    Dynamics.            (line  21)
* \abs-fontsize <1>:                     Font.                (line   7)
* \abs-fontsize:                         Selecting font and font size.
                                                              (line  20)
* \accent:                               Articulations and ornamentations.
                                                              (line   6)
* \accepts <1>:                          Context layout order.
                                                              (line   6)
* \accepts:                              Defining new contexts.
                                                              (line   6)
* \acciaccatura:                         Grace notes.         (line   6)
* \accidentalStyle:                      Automatic accidentals.
                                                              (line   6)
* \addChordShape:                        Predefined fret diagrams.
                                                              (line 201)
* \addlyrics <1>:                        Automatic syllable durations.
                                                              (line   6)
* \addlyrics:                            Aligning lyrics to a melody.
                                                              (line   6)
* \addQuote:                             Quoting other voices.
                                                              (line   6)
* \aeolian:                              Key signature.       (line  20)
* \afterGrace:                           Grace notes.         (line  46)
* \aikenHeads:                           Shape note heads.    (line   6)
* \aikenHeadsMinor:                      Shape note heads.    (line  27)
* \alias:                                Defining new contexts.
                                                              (line   6)
* \allowPageTurn:                        Optimal page turning.
                                                              (line  70)
* \alterBroken:                          Using alterBroken.   (line   6)
* \alternative:                          Long repeats.        (line  17)
* \appendToTag:                          Using tags.          (line 151)
* \appoggiatura:                         Grace notes.         (line   6)
* \arpeggio:                             Arpeggio.            (line   6)
* \arpeggioArrowDown:                    Arpeggio.            (line   6)
* \arpeggioArrowUp:                      Arpeggio.            (line   6)
* \arpeggioBracket:                      Arpeggio.            (line  31)
* \arpeggioNormal:                       Arpeggio.            (line   6)
* \arpeggioParenthesis:                  Arpeggio.            (line  31)
* \arpeggioParenthesisDashed:            Arpeggio.            (line  31)
* \arrow-head <1>:                       Graphic.             (line   7)
* \arrow-head:                           Graphic notation inside markup.
                                                              (line  54)
* \ascendens:                            Gregorian square neume ligatures.
                                                              (line  30)
* \auctum:                               Gregorian square neume ligatures.
                                                              (line  26)
* \augmentum:                            Gregorian square neume ligatures.
                                                              (line 260)
* \auto-footnote:                        Other.               (line   7)
* \autoBeamOff <1>:                      Cross-staff stems.   (line   6)
* \autoBeamOff:                          Automatic beams.     (line   8)
* \autoBeamOn:                           Automatic beams.     (line   8)
* \autoBreaksOff:                        Line breaking.       (line   6)
* \autoBreaksOn:                         Line breaking.       (line   6)
* \autochange:                           Changing staff automatically.
                                                              (line   6)
* \autoLineBreaksOff:                    Line breaking.       (line   6)
* \autoLineBreaksOn:                     Line breaking.       (line   6)
* \autoPageBreaksOff:                    Manual page breaking.
                                                              (line   6)
* \autoPageBreaksOn:                     Manual page breaking.
                                                              (line   6)
* \backslashed-digit:                    Other.               (line  25)
* \balloonGrobText:                      Balloon help.        (line   6)
* \balloonLengthOff:                     Balloon help.        (line   6)
* \balloonLengthOn:                      Balloon help.        (line   6)
* \balloonText:                          Balloon help.        (line   6)
* \bar:                                  Bar lines.           (line   6)
* \barNumberCheck:                       Bar and bar number checks.
                                                              (line  55)
* \beam:                                 Graphic.             (line  25)
* \beamExceptions:                       Setting automatic beam behavior.
                                                              (line   6)
* \bendAfter:                            Falls and doits.     (line   6)
* \bold <1>:                             Font.                (line  21)
* \bold:                                 Selecting font and font size.
                                                              (line   6)
* \book <1>:                             File structure.      (line   6)
* \book:                                 Multiple scores in a book.
                                                              (line   6)
* \bookOutputName:                       Output file names.   (line   6)
* \bookOutputSuffix:                     Output file names.   (line   6)
* \bookpart <1>:                         Manual page breaking.
                                                              (line  37)
* \bookpart <2>:                         File structure.      (line   6)
* \bookpart:                             Multiple scores in a book.
                                                              (line  62)
* \box <1>:                              Font.                (line  33)
* \box:                                  Graphic notation inside markup.
                                                              (line   8)
* \bracket <1>:                          Graphic.             (line  34)
* \bracket <2>:                          Graphic notation inside markup.
                                                              (line   8)
* \bracket:                              New dynamic marks.   (line  18)
* \break:                                Line breaking.       (line   6)
* \breathe:                              Breath marks.        (line   6)
* \breve <1>:                            Rests.               (line   6)
* \breve:                                Durations.           (line   6)
* \cadenzaOff:                           Unmetered music.     (line   6)
* \cadenzaOn:                            Unmetered music.     (line   6)
* \caesura:                              Divisiones.          (line  32)
* \caps:                                 Font.                (line  53)
* \cavum:                                Gregorian square neume ligatures.
                                                              (line  38)
* \center-align <1>:                     Align.               (line   7)
* \center-align:                         Text alignment.      (line  10)
* \center-column <1>:                    Align.               (line  21)
* \center-column:                        Text alignment.      (line  95)
* \change:                               Changing staff manually.
                                                              (line   6)
* \char:                                 Other.               (line  43)
* \chordmode <1>:                        Predefined fret diagrams.
                                                              (line  74)
* \chordmode <2>:                        Transpose.           (line 177)
* \chordmode:                            Relative octave entry.
                                                              (line 173)
* \chordRepeats:                         Default tablatures.  (line 106)
* \circle <1>:                           Graphic.             (line  45)
* \circle:                               Graphic notation inside markup.
                                                              (line   8)
* \clef:                                 Clef.                (line   6)
* \cm:                                   Distances and measurements.
                                                              (line   6)
* \coda:                                 Articulations and ornamentations.
                                                              (line   6)
* \column <1>:                           Align.               (line  37)
* \column:                               Text alignment.      (line  95)
* \column-lines:                         Text markup list commands.
                                                              (line   9)
* \combine <1>:                          Align.               (line  54)
* \combine:                              Graphic notation inside markup.
                                                              (line  54)
* \compound-meter:                       Music.               (line   7)
* \compoundMeter:                        Polymetric notation. (line  94)
* \compressMMRests:                      Full measure rests.  (line   6)
* \concat:                               Align.               (line  70)
* \consists:                             Defining new contexts.
                                                              (line   6)
* \context <1>:                          Changing all contexts of the same type.
                                                              (line   6)
* \context:                              Creating and referencing contexts.
                                                              (line   6)
* \cr:                                   Dynamics.            (line  21)
* \cresc:                                Dynamics.            (line  86)
* \crescHairpin:                         Dynamics.            (line  99)
* \crescTextCresc:                       Dynamics.            (line  99)
* \crossStaff:                           Cross-staff stems.   (line   6)
* \cueClef:                              Formatting cue notes.
                                                              (line   6)
* \cueDuring:                            Formatting cue notes.
                                                              (line   6)
* \cueDuringWithClef:                    Formatting cue notes.
                                                              (line   6)
* \customTabClef:                        Music.               (line  23)
* \decr:                                 Dynamics.            (line  21)
* \decresc:                              Dynamics.            (line  86)
* \defaultchild:                         Context layout order.
                                                              (line  61)
* \defaultTimeSignature:                 Time signature.      (line  32)
* \defineBarLine:                        Bar lines.           (line 194)
* \deminutum:                            Gregorian square neume ligatures.
                                                              (line  36)
* \denies <1>:                           Context layout order.
                                                              (line   6)
* \denies:                               Defining new contexts.
                                                              (line   6)
* \descendens:                           Gregorian square neume ligatures.
                                                              (line  28)
* \dim:                                  Dynamics.            (line  86)
* \dimHairpin:                           Dynamics.            (line  99)
* \dimTextDecr:                          Dynamics.            (line  99)
* \dimTextDecresc:                       Dynamics.            (line  99)
* \dimTextDim:                           Dynamics.            (line  99)
* \dir-column:                           Align.               (line  86)
* \discant:                              Accordion Registers. (line   7)
* \displayLilyMusic:                     Displaying LilyPond notation.
                                                              (line   6)
* \divisioMaior:                         Divisiones.          (line  36)
* \divisioMaxima:                        Divisiones.          (line  38)
* \divisioMinima:                        Divisiones.          (line  34)
* \dorian:                               Key signature.       (line  20)
* \dotsDown:                             Durations.           (line  73)
* \dotsNeutral:                          Durations.           (line  73)
* \dotsUp:                               Durations.           (line  73)
* \doubleflat:                           Music.               (line  26)
* \doublesharp:                          Music.               (line  35)
* \downbow <1>:                          Bowing indications.  (line   6)
* \downbow:                              Articulations and ornamentations.
                                                              (line   6)
* \downmordent:                          Articulations and ornamentations.
                                                              (line   6)
* \downprall:                            Articulations and ornamentations.
                                                              (line   6)
* \draw-circle <1>:                      Graphic.             (line  65)
* \draw-circle:                          Graphic notation inside markup.
                                                              (line  54)
* \draw-dashed-line:                     Graphic.             (line  77)
* \draw-dotted-line:                     Graphic.             (line 107)
* \draw-hline:                           Graphic.             (line 132)
* \draw-line <1>:                        Graphic.             (line 153)
* \draw-line:                            Graphic notation inside markup.
                                                              (line  54)
* \drummode:                             Instantiating new staves.
                                                              (line   6)
* \dynamic <1>:                          Font.                (line  66)
* \dynamic:                              New dynamic marks.   (line  18)
* \dynamicDown:                          Dynamics.            (line 123)
* \dynamicNeutral:                       Dynamics.            (line 123)
* \dynamicUp:                            Dynamics.            (line 121)
* \easyHeadsOff:                         Easy notation note heads.
                                                              (line   6)
* \easyHeadsOn:                          Easy notation note heads.
                                                              (line   6)
* \ellipse:                              Graphic.             (line 167)
* \epsfile <1>:                          Graphic.             (line 189)
* \epsfile:                              Graphic notation inside markup.
                                                              (line  73)
* \espressivo <1>:                       Dynamics.            (line  75)
* \espressivo:                           Articulations and ornamentations.
                                                              (line   6)
* \etc:                                  Substitution function examples.
                                                              (line  50)
* \eyeglasses:                           Other.               (line  53)
* \f:                                    Dynamics.            (line   6)
* \featherDurations:                     Feathered beams.     (line   6)
* \fermata <1>:                          Music.               (line  44)
* \fermata:                              Articulations and ornamentations.
                                                              (line   6)
* \fermataMarkup <1>:                    Articulations and ornamentations.
                                                              (line   6)
* \fermataMarkup:                        Full measure rests.  (line  68)
* \ff:                                   Dynamics.            (line   6)
* \fff:                                  Dynamics.            (line   6)
* \ffff:                                 Dynamics.            (line   6)
* \fffff:                                Dynamics.            (line   6)
* \fill-line <1>:                        Align.               (line 115)
* \fill-line:                            Text alignment.      (line 115)
* \fill-with-pattern:                    Align.               (line 145)
* \filled-box <1>:                       Graphic.             (line 201)
* \filled-box:                           Graphic notation inside markup.
                                                              (line  54)
* \finalis:                              Divisiones.          (line  40)
* \finger <1>:                           Font.                (line  80)
* \finger:                               Fingering instructions.
                                                              (line   6)
* \first-visible:                        Other.               (line  61)
* \fixed:                                Absolute octave entry.
                                                              (line  33)
* \flageolet:                            Articulations and ornamentations.
                                                              (line   6)
* \flat:                                 Music.               (line  58)
* \flexa:                                Gregorian square neume ligatures.
                                                              (line 257)
* \fontCaps:                             Font.                (line  91)
* \fontsize <1>:                         Font.                (line  97)
* \fontsize:                             Selecting font and font size.
                                                              (line  20)
* \footnote <1>:                         Other.               (line  74)
* \footnote:                             Footnotes in music expressions.
                                                              (line   6)
* \fp:                                   Dynamics.            (line   6)
* \fraction:                             Other.               (line  87)
* \freeBass:                             Accordion Registers. (line  38)
* \frenchChords:                         Customizing chord names.
                                                              (line 144)
* \fret-diagram <1>:                     Instrument Specific Markup.
                                                              (line   7)
* \fret-diagram:                         Fret diagram markups.
                                                              (line  59)
* \fret-diagram-terse <1>:               Instrument Specific Markup.
                                                              (line  64)
* \fret-diagram-terse:                   Fret diagram markups.
                                                              (line 145)
* \fret-diagram-verbose <1>:             Instrument Specific Markup.
                                                              (line 105)
* \fret-diagram-verbose:                 Fret diagram markups.
                                                              (line 218)
* \fromproperty:                         Other.               (line 100)
* \funkHeads:                            Shape note heads.    (line   6)
* \funkHeadsMinor:                       Shape note heads.    (line  27)
* \general-align <1>:                    Align.               (line 172)
* \general-align:                        Text alignment.      (line  71)
* \germanChords:                         Customizing chord names.
                                                              (line 138)
* \glissando:                            Glissando.           (line   6)
* \grace:                                Grace notes.         (line   6)
* \halfopen:                             Articulations and ornamentations.
                                                              (line   6)
* \halign <1>:                           Align.               (line 205)
* \halign:                               Text alignment.      (line  26)
* \harmonic <1>:                         Default tablatures.  (line 207)
* \harmonic:                             Harmonics.           (line   6)
* \harmonicByFret:                       Default tablatures.  (line 207)
* \harmonicByRatio:                      Default tablatures.  (line 207)
* \harmonicsOff:                         Harmonics.           (line   8)
* \harmonicsOn:                          Harmonics.           (line   8)
* \harp-pedal:                           Instrument Specific Markup.
                                                              (line 169)
* \hbracket <1>:                         Graphic.             (line 218)
* \hbracket:                             Graphic notation inside markup.
                                                              (line   8)
* \hcenter-in:                           Align.               (line 236)
* \header:                               File structure.      (line   6)
* \hide:                                 Making objects transparent.
                                                              (line   6)
* \hideKeySignature:                     Bagpipe definitions. (line   6)
* \hideNotes:                            Hidden notes.        (line   6)
* \hideSplitTiedTabNotes:                Default tablatures.  (line 169)
* \hideStaffSwitch:                      Staff-change lines.  (line   6)
* \hspace:                               Align.               (line 260)
* \huge <1>:                             Font.                (line 117)
* \huge <2>:                             Selecting font and font size.
                                                              (line 132)
* \huge:                                 Selecting notation font size.
                                                              (line   6)
* \improvisationOff <1>:                 Showing melody rhythms.
                                                              (line  29)
* \improvisationOff:                     Improvisation.       (line   6)
* \improvisationOn <1>:                  Showing melody rhythms.
                                                              (line  29)
* \improvisationOn:                      Improvisation.       (line   6)
* \in:                                   Distances and measurements.
                                                              (line   6)
* \incipit:                              Incipits.            (line   6)
* \inclinatum:                           Gregorian square neume ligatures.
                                                              (line  24)
* \include:                              Including LilyPond files.
                                                              (line   6)
* \inherit-acceptability:                Defining new contexts.
                                                              (line  98)
* \inStaffSegno:                         Normal repeats.      (line 144)
* \inversion:                            Inversion.           (line   6)
* \ionian:                               Key signature.       (line  20)
* \italianChords:                        Customizing chord names.
                                                              (line 142)
* \italic <1>:                           Font.                (line 129)
* \italic:                               Selecting font and font size.
                                                              (line   6)
* \justified-lines <1>:                  Text markup list commands.
                                                              (line  17)
* \justified-lines:                      Multi-page markup.   (line   6)
* \justify <1>:                          Align.               (line 320)
* \justify:                              Text alignment.      (line 137)
* \justify-field:                        Align.               (line 273)
* \justify-line:                         Align.               (line 300)
* \justify-string:                       Align.               (line 345)
* \keepWithTag:                          Using tags.          (line   6)
* \key <1>:                              Shape note heads.    (line  27)
* \key:                                  Key signature.       (line   6)
* \killCues:                             Formatting cue notes.
                                                              (line 208)
* \label:                                Reference to page numbers.
                                                              (line  48)
* \laissezVibrer:                        Ties.                (line  72)
* \large <1>:                            Font.                (line 141)
* \large <2>:                            Selecting font and font size.
                                                              (line 132)
* \large:                                Selecting notation font size.
                                                              (line   6)
* \larger <1>:                           Font.                (line 153)
* \larger:                               Selecting font and font size.
                                                              (line  20)
* \layout <1>:                           Changing all contexts of the same type.
                                                              (line   6)
* \layout <2>:                           Output definitions - blueprints for contexts.
                                                              (line  10)
* \layout <3>:                           The layout block.    (line   6)
* \layout:                               File structure.      (line   6)
* \left-align <1>:                       Align.               (line 374)
* \left-align:                           Text alignment.      (line  10)
* \left-brace:                           Other.               (line 119)
* \left-column:                          Align.               (line 388)
* \lheel:                                Articulations and ornamentations.
                                                              (line   6)
* \line:                                 Align.               (line 404)
* \linea:                                Gregorian square neume ligatures.
                                                              (line  40)
* \lineprall:                            Articulations and ornamentations.
                                                              (line   6)
* \locrian:                              Key signature.       (line  20)
* \longa <1>:                            Rests.               (line   6)
* \longa:                                Durations.           (line   6)
* \longfermata:                          Articulations and ornamentations.
                                                              (line   6)
* \lookup:                               Other.               (line 130)
* \lower <1>:                            Align.               (line 421)
* \lower:                                Text alignment.      (line  44)
* \ltoe:                                 Articulations and ornamentations.
                                                              (line   6)
* \lydian:                               Key signature.       (line  20)
* \lyricmode <1>:                        Aligning lyrics to a melody.
                                                              (line   6)
* \lyricmode:                            Entering lyrics.     (line   6)
* \lyricsto <1>:                         Automatic syllable durations.
                                                              (line   6)
* \lyricsto:                             Aligning lyrics to a melody.
                                                              (line   6)
* \magnify <1>:                          Font.                (line 165)
* \magnify:                              Selecting font and font size.
                                                              (line  20)
* \magnifyMusic:                         Selecting notation font size.
                                                              (line   6)
* \major:                                Key signature.       (line  20)
* \makeClusters:                         Clusters.            (line   6)
* \map-markup-commands:                  Text markup list commands.
                                                              (line  31)
* \marcato:                              Articulations and ornamentations.
                                                              (line   6)
* \mark <1>:                             Text marks.          (line   6)
* \mark:                                 Rehearsal marks.     (line   6)
* \markalphabet:                         Other.               (line 144)
* \markLengthOff <1>:                    Text marks.          (line  57)
* \markLengthOff:                        Metronome marks.     (line  66)
* \markLengthOn <1>:                     Text marks.          (line  57)
* \markLengthOn:                         Metronome marks.     (line  66)
* \markletter:                           Other.               (line 156)
* \markup <1>:                           Text markup introduction.
                                                              (line   6)
* \markup <2>:                           Separate text.       (line   6)
* \markup:                               Text marks.          (line   6)
* \markuplist <1>:                       Multi-page markup.   (line   6)
* \markuplist:                           Separate text.       (line  37)
* \maxima <1>:                           Rests.               (line   6)
* \maxima:                               Durations.           (line   6)
* \medium:                               Font.                (line 184)
* \melisma:                              Multiple notes to one syllable.
                                                              (line   6)
* \melismaEnd:                           Multiple notes to one syllable.
                                                              (line   6)
* \mergeDifferentlyDottedOff:            Collision resolution.
                                                              (line   6)
* \mergeDifferentlyDottedOn:             Collision resolution.
                                                              (line   6)
* \mergeDifferentlyHeadedOff:            Collision resolution.
                                                              (line   6)
* \mergeDifferentlyHeadedOn:             Collision resolution.
                                                              (line   6)
* \mf:                                   Dynamics.            (line   6)
* \midi <1>:                             Output definitions - blueprints for contexts.
                                                              (line  17)
* \midi:                                 File structure.      (line   6)
* \minor:                                Key signature.       (line  20)
* \mixolydian:                           Key signature.       (line  20)
* \mm:                                   Distances and measurements.
                                                              (line   6)
* \modalInversion:                       Modal transformations.
                                                              (line  67)
* \modalTranspose:                       Modal transformations.
                                                              (line  18)
* \mordent:                              Articulations and ornamentations.
                                                              (line   6)
* \mp:                                   Dynamics.            (line   6)
* \musicglyph <1>:                       Music.               (line  67)
* \musicglyph:                           Rehearsal marks.     (line  89)
* \name:                                 Defining new contexts.
                                                              (line   6)
* \natural:                              Music.               (line  81)
* \new:                                  Creating and referencing contexts.
                                                              (line   6)
* \newSpacingSection:                    New spacing area.    (line   6)
* \noBeam:                               Manual beams.        (line  22)
* \noBreak:                              Line breaking.       (line   6)
* \noPageBreak:                          Manual page breaking.
                                                              (line   6)
* \noPageTurn:                           Optimal page turning.
                                                              (line  68)
* \normal-size-sub:                      Font.                (line 201)
* \normal-size-super <1>:                Font.                (line 216)
* \normal-size-super:                    Selecting font and font size.
                                                              (line  74)
* \normal-text:                          Font.                (line 231)
* \normalsize <1>:                       Font.                (line 249)
* \normalsize <2>:                       Selecting font and font size.
                                                              (line 132)
* \normalsize:                           Selecting notation font size.
                                                              (line   6)
* \note:                                 Music.               (line 111)
* \note-by-number:                       Music.               (line  90)
* \null <1>:                             Other.               (line 168)
* \null:                                 Text alignment.      (line  44)
* \number:                               Font.                (line 266)
* \numericTimeSignature:                 Time signature.      (line  32)
* \octaveCheck:                          Octave checks.       (line   6)
* \omit:                                 Removing the stencil.
                                                              (line   6)
* \on-the-fly <1>:                       Other.               (line 177)
* \on-the-fly:                           Custom layout for headers and footers.
                                                              (line  19)
* \once:                                 The override command.
                                                              (line  89)
* \oneVoice:                             Single-staff polyphony.
                                                              (line   6)
* \open <1>:                             Bowing indications.  (line   6)
* \open:                                 Articulations and ornamentations.
                                                              (line   6)
* \oriscus:                              Gregorian square neume ligatures.
                                                              (line  32)
* \ottava:                               Ottava brackets.     (line   6)
* \oval:                                 Graphic.             (line 231)
* \overlay:                              Align.               (line 434)
* \override <1>:                         Other.               (line 181)
* \override <2>:                         set versus override. (line   6)
* \override:                             The override command.
                                                              (line   6)
* \override-lines:                       Text markup list commands.
                                                              (line  40)
* \overrideProperty:                     set versus override. (line  45)
* \overrideTimeSignatureSettings:        Time signature.      (line  54)
* \p:                                    Dynamics.            (line   6)
* \pad-around <1>:                       Align.               (line 449)
* \pad-around:                           Graphic notation inside markup.
                                                              (line  28)
* \pad-markup <1>:                       Align.               (line 466)
* \pad-markup:                           Graphic notation inside markup.
                                                              (line  28)
* \pad-to-box <1>:                       Align.               (line 483)
* \pad-to-box:                           Graphic notation inside markup.
                                                              (line  28)
* \pad-x <1>:                            Align.               (line 500)
* \pad-x:                                Graphic notation inside markup.
                                                              (line  28)
* \page-link:                            Other.               (line 207)
* \page-ref <1>:                         Other.               (line 217)
* \page-ref:                             Reference to page numbers.
                                                              (line  48)
* \pageBreak:                            Manual page breaking.
                                                              (line   6)
* \pageTurn:                             Optimal page turning.
                                                              (line  68)
* \paper <1>:                            Paper size and automatic scaling.
                                                              (line   6)
* \paper:                                File structure.      (line   6)
* \parallelMusic:                        Writing music in parallel.
                                                              (line   6)
* \parenthesize <1>:                     Graphic.             (line 253)
* \parenthesize:                         Parentheses.         (line   6)
* \partcombine <1>:                      Polyphony with shared lyrics.
                                                              (line   6)
* \partcombine:                          Automatic part combining.
                                                              (line   6)
* \partcombineApart:                     Automatic part combining.
                                                              (line  96)
* \partcombineAutomatic:                 Automatic part combining.
                                                              (line  96)
* \partcombineChords:                    Automatic part combining.
                                                              (line  96)
* \partcombineSoloI:                     Automatic part combining.
                                                              (line  96)
* \partcombineSoloII:                    Automatic part combining.
                                                              (line  96)
* \partcombineUnisono:                   Automatic part combining.
                                                              (line  96)
* \partial <1>:                          Normal repeats.      (line  97)
* \partial <2>:                          Long repeats.        (line  17)
* \partial:                              Upbeats.             (line   6)
* \path:                                 Graphic.             (line 289)
* \pattern:                              Other.               (line 227)
* \pes:                                  Gregorian square neume ligatures.
                                                              (line 257)
* \phrasingSlurDashed:                   Phrasing slurs.      (line  25)
* \phrasingSlurDashPattern:              Phrasing slurs.      (line  56)
* \phrasingSlurDotted:                   Phrasing slurs.      (line  25)
* \phrasingSlurDown:                     Phrasing slurs.      (line  16)
* \phrasingSlurHalfDashed:               Phrasing slurs.      (line  40)
* \phrasingSlurHalfSolid:                Phrasing slurs.      (line  40)
* \phrasingSlurNeutral:                  Phrasing slurs.      (line  16)
* \phrasingSlurSolid:                    Phrasing slurs.      (line  25)
* \phrasingSlurUp:                       Phrasing slurs.      (line  16)
* \phrygian:                             Key signature.       (line  20)
* \pitchedTrill:                         Trills.              (line  60)
* \portato:                              Articulations and ornamentations.
                                                              (line   6)
* \postscript <1>:                       Graphic.             (line 350)
* \postscript:                           Graphic notation inside markup.
                                                              (line  73)
* \powerChords:                          Indicating power chords.
                                                              (line   6)
* \pp:                                   Dynamics.            (line   6)
* \ppp:                                  Dynamics.            (line   6)
* \pppp:                                 Dynamics.            (line   6)
* \ppppp:                                Dynamics.            (line   6)
* \prall:                                Articulations and ornamentations.
                                                              (line   6)
* \pralldown:                            Articulations and ornamentations.
                                                              (line   6)
* \prallmordent:                         Articulations and ornamentations.
                                                              (line   6)
* \prallprall:                           Articulations and ornamentations.
                                                              (line   6)
* \prallup:                              Articulations and ornamentations.
                                                              (line   6)
* \predefinedFretboardsOff:              Automatic fret diagrams.
                                                              (line  30)
* \predefinedFretboardsOn:               Automatic fret diagrams.
                                                              (line  30)
* \property-recursive:                   Other.               (line 241)
* \pt:                                   Distances and measurements.
                                                              (line   6)
* \pushToTag:                            Using tags.          (line 151)
* \put-adjacent:                         Align.               (line 517)
* \quilisma:                             Gregorian square neume ligatures.
                                                              (line  34)
* \quoteDuring <1>:                      Formatting cue notes.
                                                              (line   6)
* \quoteDuring:                          Quoting other voices.
                                                              (line   6)
* \raise <1>:                            Align.               (line 520)
* \raise:                                Text alignment.      (line  44)
* \relative <1>:                         Changing staff automatically.
                                                              (line  40)
* \relative <2>:                         Transpose.           (line 177)
* \relative:                             Relative octave entry.
                                                              (line   6)
* \RemoveEmptyStaves:                    Hiding staves.       (line   6)
* \removeWithTag:                        Using tags.          (line   6)
* \repeat:                               Long repeats.        (line  17)
* \repeat percent:                       Percent repeats.     (line   6)
* \repeat tremolo:                       Tremolo repeats.     (line   6)
* \repeatTie <1>:                        Lyrics and repeats.  (line 272)
* \repeatTie <2>:                        Normal repeats.      (line 131)
* \repeatTie:                            Ties.                (line  57)
* \replace:                              Font.                (line 279)
* \rest <1>:                             Music.               (line 155)
* \rest:                                 Rests.               (line   6)
* \rest-by-number:                       Music.               (line 134)
* \retrograde:                           Retrograde.          (line   6)
* \reverseturn:                          Articulations and ornamentations.
                                                              (line   6)
* \revert:                               The override command.
                                                              (line  53)
* \revertTimeSignatureSettings:          Time signature.      (line 113)
* \rfz:                                  Dynamics.            (line   6)
* \rheel:                                Articulations and ornamentations.
                                                              (line   6)
* \right-align <1>:                      Align.               (line 544)
* \right-align:                          Text alignment.      (line  10)
* \right-brace:                          Other.               (line 245)
* \right-column:                         Align.               (line 558)
* \rightHandFinger:                      Right-hand fingerings.
                                                              (line   6)
* \roman:                                Font.                (line 289)
* \romanStringNumbers:                   Bowing indications.  (line   6)
* \rotate:                               Align.               (line 574)
* \rounded-box <1>:                      Graphic.             (line 375)
* \rounded-box:                          Graphic notation inside markup.
                                                              (line   8)
* \rtoe:                                 Articulations and ornamentations.
                                                              (line   6)
* \sacredHarpHeads:                      Shape note heads.    (line   6)
* \sacredHarpHeadsMinor:                 Shape note heads.    (line  27)
* \sans:                                 Font.                (line 306)
* \scale:                                Graphic.             (line 400)
* \scaleDurations <1>:                   Polymetric notation. (line   6)
* \scaleDurations:                       Scaling durations.   (line  36)
* \score <1>:                            Music.               (line 191)
* \score <2>:                            File structure.      (line   6)
* \score:                                Structure of a score.
                                                              (line   6)
* \score-lines:                          Text markup list commands.
                                                              (line  43)
* \segno:                                Articulations and ornamentations.
                                                              (line   6)
* \semiflat:                             Music.               (line 241)
* \semiGermanChords:                     Customizing chord names.
                                                              (line 140)
* \semisharp:                            Music.               (line 250)
* \sesquiflat:                           Music.               (line 259)
* \sesquisharp:                          Music.               (line 268)
* \set <1>:                              set versus override. (line   6)
* \set <2>:                              The set command.     (line   6)
* \set:                                  Setting automatic beam behavior.
                                                              (line   6)
* \sf:                                   Dynamics.            (line   6)
* \sff:                                  Dynamics.            (line   6)
* \sfz:                                  Dynamics.            (line   6)
* \shape:                                Modifying ties and slurs.
                                                              (line  40)
* \sharp:                                Music.               (line 277)
* \shiftOff:                             Collision resolution.
                                                              (line   6)
* \shiftOn:                              Collision resolution.
                                                              (line   6)
* \shiftOnn:                             Collision resolution.
                                                              (line   6)
* \shiftOnnn:                            Collision resolution.
                                                              (line   6)
* \shortfermata:                         Articulations and ornamentations.
                                                              (line   6)
* \showKeySignature:                     Bagpipe definitions. (line   6)
* \showStaffSwitch:                      Staff-change lines.  (line   6)
* \signumcongruentiae:                   Articulations and ornamentations.
                                                              (line   6)
* \simple:                               Font.                (line 319)
* \skip <1>:                             Lyrics and repeats.  (line 226)
* \skip:                                 Invisible rests.     (line   6)
* \slashed-digit:                        Other.               (line 256)
* \slashedGrace:                         Grace notes.         (line   6)
* \slurDashed:                           Slurs.               (line  35)
* \slurDashPattern:                      Slurs.               (line  66)
* \slurDotted:                           Slurs.               (line  35)
* \slurDown:                             Slurs.               (line  19)
* \slurHalfDashed:                       Slurs.               (line  50)
* \slurHalfSolid:                        Slurs.               (line  50)
* \slurNeutral:                          Slurs.               (line  19)
* \slurSolid:                            Slurs.               (line  35)
* \slurUp:                               Slurs.               (line  80)
* \small <1>:                            Font.                (line 334)
* \small <2>:                            Selecting font and font size.
                                                              (line 132)
* \small:                                Selecting notation font size.
                                                              (line   6)
* \smallCaps:                            Font.                (line 346)
* \smaller <1>:                          Font.                (line 361)
* \smaller:                              Selecting font and font size.
                                                              (line  20)
* \snappizzicato:                        Articulations and ornamentations.
                                                              (line   6)
* \sostenutoOff:                         Piano pedals.        (line   6)
* \sostenutoOn:                          Piano pedals.        (line   6)
* \southernHarmonyHeads:                 Shape note heads.    (line   6)
* \southernHarmonyHeadsMinor:            Shape note heads.    (line  27)
* \sp:                                   Dynamics.            (line   6)
* \spp:                                  Dynamics.            (line   6)
* \staccatissimo:                        Articulations and ornamentations.
                                                              (line   6)
* \staccato:                             Articulations and ornamentations.
                                                              (line   6)
* \startGroup:                           Analysis brackets.   (line   6)
* \startStaff <1>:                       Ossia staves.        (line   6)
* \startStaff:                           Staff symbol.        (line   6)
* \startTrillSpan:                       Trills.              (line   6)
* \stdBass:                              Accordion Registers. (line  54)
* \stdBassIV:                            Accordion Registers. (line  88)
* \stdBassV:                             Accordion Registers. (line 119)
* \stdBassVI:                            Accordion Registers. (line 157)
* \stemDown:                             Stems.               (line   6)
* \stemNeutral:                          Stems.               (line   6)
* \stemUp:                               Stems.               (line   6)
* \stencil:                              Other.               (line 274)
* \stopGroup:                            Analysis brackets.   (line   6)
* \stopped:                              Articulations and ornamentations.
                                                              (line   6)
* \stopStaff <1>:                        Hiding staves.       (line   6)
* \stopStaff <2>:                        Ossia staves.        (line   6)
* \stopStaff:                            Staff symbol.        (line   6)
* \stopTrillSpan:                        Trills.              (line   6)
* \storePredefinedDiagram:               Predefined fret diagrams.
                                                              (line 201)
* \stringTuning:                         Custom tablatures.   (line  42)
* \stropha:                              Gregorian square neume ligatures.
                                                              (line  22)
* \strut:                                Other.               (line 283)
* \sub <1>:                              Font.                (line 378)
* \sub:                                  Selecting font and font size.
                                                              (line  74)
* \super <1>:                            Font.                (line 396)
* \super:                                Selecting font and font size.
                                                              (line  74)
* \sustainOff:                           Piano pedals.        (line   6)
* \sustainOn:                            Piano pedals.        (line   6)
* \tabChordRepeats:                      Default tablatures.  (line 106)
* \tabFullNotation:                      Default tablatures.  (line  49)
* \table-of-contents <1>:                Text markup list commands.
                                                              (line  48)
* \table-of-contents:                    Table of contents.   (line 140)
* \tag:                                  Using tags.          (line   6)
* \tagGroup:                             Using tags.          (line 131)
* \taor:                                 Bagpipe definitions. (line   6)
* \teeny <1>:                            Font.                (line 413)
* \teeny <2>:                            Selecting font and font size.
                                                              (line 132)
* \teeny:                                Selecting notation font size.
                                                              (line   6)
* \tempo:                                Metronome marks.     (line   6)
* \tenuto:                               Articulations and ornamentations.
                                                              (line   6)
* \text:                                 Font.                (line 425)
* \textLengthOff <1>:                    Text scripts.        (line  45)
* \textLengthOff:                        Full measure rests.  (line  96)
* \textLengthOn <1>:                     Text scripts.        (line  45)
* \textLengthOn:                         Full measure rests.  (line  96)
* \textSpannerDown:                      Text spanners.       (line  36)
* \textSpannerNeutral:                   Text spanners.       (line  36)
* \textSpannerUp:                        Text spanners.       (line  36)
* \thumb <1>:                            Fingering instructions.
                                                              (line  20)
* \thumb:                                Articulations and ornamentations.
                                                              (line   6)
* \tied-lyric:                           Music.               (line 286)
* \tieDashed:                            Ties.                (line  83)
* \tieDotted:                            Ties.                (line  83)
* \tieDown:                              Ties.                (line  80)
* \tieNeutral:                           Ties.                (line  80)
* \tieSolid:                             Ties.                (line  83)
* \tieUp:                                Ties.                (line  80)
* \time <1>:                             Setting automatic beam behavior.
                                                              (line   6)
* \time:                                 Time signature.      (line   6)
* \tiny <1>:                             Font.                (line 440)
* \tiny <2>:                             Selecting font and font size.
                                                              (line 132)
* \tiny:                                 Selecting notation font size.
                                                              (line   6)
* \tocItem:                              Table of contents.   (line 140)
* \translate <1>:                        Align.               (line 588)
* \translate:                            Text alignment.      (line  71)
* \translate-scaled <1>:                 Align.               (line 600)
* \translate-scaled:                     Text alignment.      (line  71)
* \transparent:                          Other.               (line 286)
* \transpose <1>:                        Transpose.           (line   6)
* \transpose:                            Relative octave entry.
                                                              (line 173)
* \transposedCueDuring:                  Formatting cue notes.
                                                              (line 173)
* \transposition <1>:                    Quoting other voices.
                                                              (line   6)
* \transposition:                        Instrument transpositions.
                                                              (line   6)
* \treCorde:                             Piano pedals.        (line   6)
* \triangle <1>:                         Graphic.             (line 416)
* \triangle:                             Graphic notation inside markup.
                                                              (line  54)
* \trill <1>:                            Trills.              (line   6)
* \trill:                                Articulations and ornamentations.
                                                              (line   6)
* \tuplet <1>:                           Polymetric notation. (line   6)
* \tuplet:                               Tuplets.             (line   6)
* \tupletDown:                           Tuplets.             (line  33)
* \tupletNeutral:                        Tuplets.             (line  33)
* \tupletUp:                             Tuplets.             (line  33)
* \turn:                                 Articulations and ornamentations.
                                                              (line   6)
* \tweak <1>:                            set versus override. (line  45)
* \tweak:                                The tweak command.   (line   6)
* \type:                                 Defining new contexts.
                                                              (line   6)
* \typewriter:                           Font.                (line 452)
* \unaCorda:                             Piano pedals.        (line   6)
* \underline <1>:                        Font.                (line 464)
* \underline:                            Selecting font and font size.
                                                              (line   6)
* \unfoldRepeats:                        Using repeats with MIDI.
                                                              (line   6)
* \unHideNotes:                          Hidden notes.        (line   6)
* \unset:                                The set command.     (line  67)
* \upbow <1>:                            Bowing indications.  (line   6)
* \upbow:                                Articulations and ornamentations.
                                                              (line   6)
* \upmordent:                            Articulations and ornamentations.
                                                              (line   6)
* \upprall:                              Articulations and ornamentations.
                                                              (line   6)
* \upright:                              Font.                (line 485)
* \varcoda:                              Articulations and ornamentations.
                                                              (line   6)
* \vcenter:                              Align.               (line 616)
* \verbatim-file:                        Other.               (line 297)
* \verylongfermata:                      Articulations and ornamentations.
                                                              (line   6)
* \virga:                                Gregorian square neume ligatures.
                                                              (line  20)
* \virgula:                              Divisiones.          (line  32)
* \voiceFourStyle:                       Voice styles.        (line   6)
* \voiceNeutralStyle:                    Voice styles.        (line   6)
* \voiceOne:                             Single-staff polyphony.
                                                              (line   6)
* \voiceOne ... \voiceFour:              Single-staff polyphony.
                                                              (line   6)
* \voiceOneStyle:                        Voice styles.        (line   6)
* \voiceThreeStyle:                      Voice styles.        (line   6)
* \voiceTwoStyle:                        Voice styles.        (line   6)
* \void:                                 Displaying LilyPond notation.
                                                              (line  25)
* \vspace:                               Align.               (line 628)
* \walkerHeads:                          Shape note heads.    (line   6)
* \walkerHeadsMinor:                     Shape note heads.    (line  27)
* \whiteout:                             Other.               (line 306)
* \with <1>:                             Changing just one specific context.
                                                              (line   6)
* \with:                                 Modifying context plug-ins.
                                                              (line  19)
* \with-color <1>:                       Other.               (line 333)
* \with-color:                           Coloring objects.    (line   6)
* \with-dimensions:                      Other.               (line 349)
* \with-link:                            Other.               (line 352)
* \with-url:                             Graphic.             (line 434)
* \woodwind-diagram:                     Instrument Specific Markup.
                                                              (line 220)
* \wordwrap <1>:                         Align.               (line 672)
* \wordwrap:                             Text alignment.      (line 137)
* \wordwrap-field:                       Align.               (line 644)
* \wordwrap-internal:                    Text markup list commands.
                                                              (line  50)
* \wordwrap-lines <1>:                   Text markup list commands.
                                                              (line  61)
* \wordwrap-lines:                       Multi-page markup.   (line   6)
* \wordwrap-string:                      Align.               (line 696)
* \wordwrap-string-internal:             Text markup list commands.
                                                              (line  75)
* ]:                                     Manual beams.        (line   6)
* ^:                                     Extended and altered chords.
                                                              (line  71)
* _:                                     Multiple syllables to one note.
                                                              (line   6)
* absolute:                              Available music functions.
                                                              (line   7)
* accepts:                               Defining new contexts.
                                                              (line   6)
* acciaccatura:                          Available music functions.
                                                              (line  12)
* accidentalStyle:                       Available music functions.
                                                              (line  15)
* addChordShape <1>:                     Available music functions.
                                                              (line  22)
* addChordShape:                         Predefined fret diagrams.
                                                              (line 201)
* addInstrumentDefinition:               Available music functions.
                                                              (line  26)
* additionalPitchPrefix:                 Customizing chord names.
                                                              (line  51)
* addQuote <1>:                          Available music functions.
                                                              (line  29)
* addQuote:                              Quoting other voices.
                                                              (line   6)
* aeolian:                               Key signature.       (line  20)
* afterGrace <1>:                        Available music functions.
                                                              (line  32)
* afterGrace:                            Grace notes.         (line  46)
* aikenHeads:                            Shape note heads.    (line   6)
* aikenHeadsMinor:                       Shape note heads.    (line  27)
* alias:                                 Defining new contexts.
                                                              (line   6)
* alignAboveContext:                     Context layout order.
                                                              (line  75)
* alignBelowContext <1>:                 Context layout order.
                                                              (line  75)
* alignBelowContext:                     Lyrics and repeats.  (line 150)
* allowPageTurn:                         Available music functions.
                                                              (line  35)
* allowVoltaHook:                        Available music functions.
                                                              (line  39)
* alterBroken:                           Available music functions.
                                                              (line  42)
* annotate-spacing:                      Displaying spacing.  (line   6)
* appendToTag:                           Available music functions.
                                                              (line  49)
* applyContext:                          Available music functions.
                                                              (line  53)
* applyMusic:                            Available music functions.
                                                              (line  56)
* applyOutput:                           Available music functions.
                                                              (line  59)
* appoggiatura:                          Available music functions.
                                                              (line  63)
* arpeggio:                              Arpeggio.            (line   6)
* arpeggioArrowDown:                     Arpeggio.            (line   6)
* arpeggioArrowUp:                       Arpeggio.            (line   6)
* arpeggioBracket:                       Arpeggio.            (line  31)
* arpeggioNormal:                        Arpeggio.            (line   6)
* arpeggioParenthesis:                   Arpeggio.            (line  31)
* arpeggioParenthesisDashed:             Arpeggio.            (line  31)
* arrow-head:                            Graphic notation inside markup.
                                                              (line  54)
* assertBeamQuant:                       Available music functions.
                                                              (line  66)
* assertBeamSlope:                       Available music functions.
                                                              (line  69)
* aug:                                   Common chords.       (line  25)
* auto-first-page-number:                paper variables for page numbering.
                                                              (line  10)
* autoBeaming <1>:                       Output definitions - blueprints for contexts.
                                                              (line  28)
* autoBeaming:                           Setting automatic beam behavior.
                                                              (line   6)
* autoBeamOff:                           Automatic beams.     (line   8)
* autoBeamOn:                            Automatic beams.     (line   8)
* autochange <1>:                        Available music functions.
                                                              (line  73)
* autochange:                            Changing staff automatically.
                                                              (line   6)
* Balloon_engraver:                      Balloon help.        (line   6)
* balloonGrobText <1>:                   Available music functions.
                                                              (line  79)
* balloonGrobText:                       Balloon help.        (line   6)
* balloonLengthOff:                      Balloon help.        (line   6)
* balloonLengthOn:                       Balloon help.        (line   6)
* balloonText <1>:                       Available music functions.
                                                              (line  82)
* balloonText:                           Balloon help.        (line   6)
* banjo-c-tuning:                        Banjo tablatures.    (line  28)
* banjo-modal-tuning:                    Banjo tablatures.    (line  28)
* banjo-open-d-tuning:                   Banjo tablatures.    (line  28)
* banjo-open-dm-tuning:                  Banjo tablatures.    (line  28)
* bar <1>:                               Available music functions.
                                                              (line  85)
* bar:                                   Bar lines.           (line   6)
* barCheckSynchronize:                   Bar and bar number checks.
                                                              (line   6)
* BarNumber:                             Bar numbers.         (line  20)
* barNumberCheck <1>:                    Available music functions.
                                                              (line  88)
* barNumberCheck:                        Bar and bar number checks.
                                                              (line  55)
* barNumberVisibility:                   Bar numbers.         (line  20)
* bartype:                               Bar lines.           (line 297)
* base-shortest-duration:                Horizontal spacing overview.
                                                              (line  52)
* baseMoment:                            Setting automatic beam behavior.
                                                              (line   6)
* beamExceptions <1>:                    Available music functions.
                                                              (line  91)
* beamExceptions:                        Setting automatic beam behavior.
                                                              (line   6)
* beatStructure:                         Setting automatic beam behavior.
                                                              (line   6)
* bendAfter <1>:                         Available music functions.
                                                              (line  97)
* bendAfter:                             Falls and doits.     (line   6)
* binding-offset:                        paper variables for two-sided mode.
                                                              (line  28)
* blank-after-score-page-penalty:        paper variables for page breaking.
                                                              (line  60)
* blank-last-page-penalty:               paper variables for page breaking.
                                                              (line  52)
* blank-page-penalty:                    paper variables for page breaking.
                                                              (line  45)
* bold:                                  Selecting font and font size.
                                                              (line   6)
* bookOutputName:                        Available music functions.
                                                              (line 100)
* bookOutputSuffix:                      Available music functions.
                                                              (line 103)
* bookTitleMarkup:                       Custom layout for titles.
                                                              (line   6)
* bottom-margin:                         Fixed vertical spacing paper variables.
                                                              (line  23)
* box:                                   Graphic notation inside markup.
                                                              (line   8)
* bracket <1>:                           Piano pedals.        (line  21)
* bracket <2>:                           Graphic notation inside markup.
                                                              (line   8)
* bracket:                               New dynamic marks.   (line  18)
* breakable:                             Automatic beams.     (line  48)
* breathe <1>:                           Available music functions.
                                                              (line 107)
* breathe:                               Breath marks.        (line   6)
* breve <1>:                             Rests.               (line   6)
* breve:                                 Durations.           (line   6)
* cadenzaOff:                            Unmetered music.     (line   6)
* cadenzaOn:                             Unmetered music.     (line   6)
* center-align:                          Text alignment.      (line  10)
* center-column:                         Text alignment.      (line  95)
* change:                                Changing staff manually.
                                                              (line   6)
* check-consistency:                     paper variables for widths and margins.
                                                              (line  62)
* chordChanges:                          Printing chord names.
                                                              (line  79)
* chordmode <1>:                         Predefined fret diagrams.
                                                              (line  74)
* chordmode <2>:                         Transpose.           (line 177)
* chordmode:                             Relative octave entry.
                                                              (line 173)
* chordNameExceptions:                   Customizing chord names.
                                                              (line 106)
* chordNameLowercaseMinor:               Customizing chord names.
                                                              (line  25)
* ChordNames:                            Predefined fret diagrams.
                                                              (line  74)
* chordNameSeparator:                    Customizing chord names.
                                                              (line  73)
* chordNoteNamer:                        Customizing chord names.
                                                              (line  65)
* chordPrefixSpacer:                     Customizing chord names.
                                                              (line 126)
* chordRepeats:                          Available music functions.
                                                              (line 110)
* chordRootNamer:                        Customizing chord names.
                                                              (line  39)
* chords:                                Printing chord names.
                                                              (line  58)
* circle:                                Graphic notation inside markup.
                                                              (line   8)
* clef <1>:                              Available music functions.
                                                              (line 115)
* clef:                                  Clef.                (line   6)
* clip-regions:                          Controlling output.  (line  13)
* color:                                 Coloring objects.    (line   6)
* column:                                Text alignment.      (line  95)
* combine:                               Graphic notation inside markup.
                                                              (line  54)
* common-shortest-duration:              Horizontal spacing overview.
                                                              (line  52)
* Completion_heads_engraver:             Automatic note splitting.
                                                              (line   6)
* Completion_rest_engraver:              Automatic note splitting.
                                                              (line   6)
* compoundMeter:                         Available music functions.
                                                              (line 118)
* compressMMRests <1>:                   Available music functions.
                                                              (line 129)
* compressMMRests:                       Full measure rests.  (line   6)
* consists:                              Defining new contexts.
                                                              (line   6)
* controlpitch:                          Octave checks.       (line   6)
* cr:                                    Dynamics.            (line  21)
* cresc:                                 Dynamics.            (line  86)
* crescHairpin:                          Dynamics.            (line  99)
* crescTextCresc:                        Dynamics.            (line  99)
* cross:                                 Special note heads.  (line   6)
* crossStaff:                            Available music functions.
                                                              (line 133)
* cueClef <1>:                           Available music functions.
                                                              (line 136)
* cueClef:                               Formatting cue notes.
                                                              (line   6)
* cueClefUnset:                          Available music functions.
                                                              (line 139)
* cueDuring <1>:                         Available music functions.
                                                              (line 142)
* cueDuring:                             Formatting cue notes.
                                                              (line   6)
* cueDuringWithClef <1>:                 Available music functions.
                                                              (line 146)
* cueDuringWithClef:                     Formatting cue notes.
                                                              (line   6)
* currentBarNumber <1>:                  Time administration. (line   6)
* currentBarNumber:                      Bar numbers.         (line   6)
* deadNote:                              Available music functions.
                                                              (line 150)
* decr:                                  Dynamics.            (line  21)
* decresc:                               Dynamics.            (line  86)
* default:                               Automatic accidentals.
                                                              (line   6)
* default-staff-staff-spacing:           Within-system spacing properties.
                                                              (line   6)
* defaultBarType:                        Bar lines.           (line 297)
* defaultNoteHeads:                      Available music functions.
                                                              (line 153)
* defaultTimeSignature:                  Time signature.      (line  32)
* defineBarLine <1>:                     Available music functions.
                                                              (line 156)
* defineBarLine:                         Bar lines.           (line 194)
* denies:                                Defining new contexts.
                                                              (line   6)
* dim <1>:                               Common chords.       (line  25)
* dim:                                   Dynamics.            (line  86)
* dimHairpin:                            Dynamics.            (line  99)
* dimTextDecr:                           Dynamics.            (line  99)
* dimTextDecresc:                        Dynamics.            (line  99)
* dimTextDim:                            Dynamics.            (line  99)
* displayLilyMusic:                      Available music functions.
                                                              (line 162)
* displayMusic:                          Available music functions.
                                                              (line 166)
* displayScheme:                         Available music functions.
                                                              (line 170)
* dodecaphonic:                          Automatic accidentals.
                                                              (line 221)
* dodecaphonic-first:                    Automatic accidentals.
                                                              (line 238)
* dodecaphonic-no-repeat:                Automatic accidentals.
                                                              (line 230)
* dorian:                                Key signature.       (line  20)
* dotsDown:                              Durations.           (line  73)
* dotsNeutral:                           Durations.           (line  73)
* dotsUp:                                Durations.           (line  73)
* draw-circle:                           Graphic notation inside markup.
                                                              (line  54)
* draw-line:                             Graphic notation inside markup.
                                                              (line  54)
* drummode:                              Instantiating new staves.
                                                              (line   6)
* DrumStaff:                             Instantiating new staves.
                                                              (line   6)
* dynamic:                               New dynamic marks.   (line  18)
* dynamicDown:                           Dynamics.            (line 123)
* DynamicLineSpanner:                    Dynamics.            (line 120)
* dynamicNeutral:                        Dynamics.            (line 123)
* dynamicUp:                             Dynamics.            (line 123)
* easyHeadsOff:                          Easy notation note heads.
                                                              (line   6)
* easyHeadsOn:                           Easy notation note heads.
                                                              (line   6)
* endSpanners:                           Available music functions.
                                                              (line 174)
* epsfile:                               Graphic notation inside markup.
                                                              (line  73)
* espressivo:                            Dynamics.            (line  75)
* eventChords:                           Available music functions.
                                                              (line 178)
* extra-offset:                          Within-system spacing properties.
                                                              (line   6)
* f:                                     Dynamics.            (line   6)
* featherDurations <1>:                  Available music functions.
                                                              (line 183)
* featherDurations:                      Feathered beams.     (line   6)
* fermataMarkup:                         Full measure rests.  (line  68)
* ff:                                    Dynamics.            (line   6)
* fff:                                   Dynamics.            (line   6)
* ffff:                                  Dynamics.            (line   6)
* fffff:                                 Dynamics.            (line   6)
* fill-line:                             Text alignment.      (line 115)
* filled-box:                            Graphic notation inside markup.
                                                              (line  54)
* finger <1>:                            Available music functions.
                                                              (line 186)
* finger:                                Fingering instructions.
                                                              (line   6)
* first-page-number:                     paper variables for page numbering.
                                                              (line  17)
* fixed <1>:                             Available music functions.
                                                              (line 189)
* fixed:                                 Absolute octave entry.
                                                              (line  33)
* followVoice:                           Staff-change lines.  (line   6)
* font-interface <1>:                    Fonts explained.     (line   6)
* font-interface:                        Selecting notation font size.
                                                              (line 189)
* font-size:                             Selecting notation font size.
                                                              (line   6)
* fontsize:                              Selecting font and font size.
                                                              (line  20)
* fontSize:                              Selecting notation font size.
                                                              (line   6)
* footnote:                              Available music functions.
                                                              (line 192)
* forget:                                Automatic accidentals.
                                                              (line 264)
* four-string-banjo:                     Banjo tablatures.    (line  28)
* fp:                                    Dynamics.            (line   6)
* fret-diagram:                          Fret diagram markups.
                                                              (line  59)
* fret-diagram-interface:                Fret diagram markups.
                                                              (line 342)
* fret-diagram-terse:                    Fret diagram markups.
                                                              (line 145)
* fret-diagram-verbose:                  Fret diagram markups.
                                                              (line 218)
* FretBoards:                            Predefined fret diagrams.
                                                              (line   6)
* funkHeads:                             Shape note heads.    (line   6)
* funkHeadsMinor:                        Shape note heads.    (line  27)
* general-align:                         Text alignment.      (line  71)
* glissando:                             Glissando.           (line   6)
* grace:                                 Available music functions.
                                                              (line 213)
* GregorianTranscriptionStaff:           Instantiating new staves.
                                                              (line   6)
* Grid_line_span_engraver:               Grid lines.          (line   6)
* Grid_point_engraver:                   Grid lines.          (line   6)
* gridInterval:                          Grid lines.          (line   6)
* grobdescriptions:                      Available music functions.
                                                              (line 216)
* grow-direction:                        Feathered beams.     (line   6)
* halign:                                Text alignment.      (line  26)
* harmonicByFret:                        Available music functions.
                                                              (line 220)
* harmonicByRatio:                       Available music functions.
                                                              (line 225)
* harmonicNote:                          Available music functions.
                                                              (line 230)
* harmonicsOn:                           Available music functions.
                                                              (line 233)
* hbracket:                              Graphic notation inside markup.
                                                              (line   8)
* hide:                                  Available music functions.
                                                              (line 236)
* hideKeySignature:                      Bagpipe definitions. (line   6)
* hideNotes:                             Hidden notes.        (line   6)
* hideStaffSwitch:                       Staff-change lines.  (line   6)
* horizontal-shift:                      paper variables for shifts and indents.
                                                              (line  10)
* Horizontal_bracket_engraver:           Analysis brackets.   (line   6)
* huge <1>:                              Selecting font and font size.
                                                              (line 132)
* huge:                                  Selecting notation font size.
                                                              (line   6)
* improvisationOff <1>:                  Showing melody rhythms.
                                                              (line  29)
* improvisationOff:                      Improvisation.       (line   6)
* improvisationOn <1>:                   Showing melody rhythms.
                                                              (line  29)
* improvisationOn:                       Improvisation.       (line   6)
* incipit <1>:                           Available music functions.
                                                              (line 245)
* incipit:                               Incipits.            (line   6)
* indent <1>:                            Line width.          (line   6)
* indent <2>:                            paper variables for shifts and indents.
                                                              (line  14)
* indent:                                Instrument names.    (line  56)
* inherit-acceptability:                 Available music functions.
                                                              (line 249)
* inner-margin:                          paper variables for two-sided mode.
                                                              (line  16)
* inStaffSegno:                          Available music functions.
                                                              (line 254)
* instrumentSwitch:                      Available music functions.
                                                              (line 258)
* inversion:                             Available music functions.
                                                              (line 262)
* ionian:                                Key signature.       (line  20)
* italic:                                Selecting font and font size.
                                                              (line   6)
* justified-lines:                       Multi-page markup.   (line   6)
* justify:                               Text alignment.      (line 137)
* keepWithTag:                           Available music functions.
                                                              (line 265)
* key <1>:                               Available music functions.
                                                              (line 275)
* key <2>:                               Shape note heads.    (line  27)
* key:                                   Key signature.       (line   6)
* killCues <1>:                          Available music functions.
                                                              (line 279)
* killCues:                              Formatting cue notes.
                                                              (line 208)
* label:                                 Available music functions.
                                                              (line 282)
* laissezVibrer:                         Ties.                (line  72)
* language:                              Available music functions.
                                                              (line 285)
* languageRestore:                       Available music functions.
                                                              (line 288)
* languageSaveAndChange:                 Available music functions.
                                                              (line 291)
* large <1>:                             Selecting font and font size.
                                                              (line 132)
* large:                                 Selecting notation font size.
                                                              (line   6)
* larger:                                Selecting font and font size.
                                                              (line  20)
* last-bottom-spacing:                   List of flexible vertical spacing paper variables.
                                                              (line  36)
* layout file:                           Setting the staff size.
                                                              (line   6)
* layout-set-staff-size:                 Setting the staff size.
                                                              (line   6)
* left-align:                            Text alignment.      (line  10)
* left-margin:                           paper variables for widths and margins.
                                                              (line  40)
* line-width <1>:                        Line width.          (line   6)
* line-width:                            paper variables for widths and margins.
                                                              (line  17)
* locrian:                               Key signature.       (line  20)
* longa <1>:                             Rests.               (line   6)
* longa:                                 Durations.           (line   6)
* lower:                                 Text alignment.      (line  44)
* ly:minimal-breaking:                   Minimal page breaking.
                                                              (line   6)
* ly:one-line-breaking:                  One-line page breaking.
                                                              (line   6)
* ly:optimal-breaking:                   Optimal page breaking.
                                                              (line   6)
* ly:page-turn-breaking:                 Optimal page turning.
                                                              (line   6)
* lydian:                                Key signature.       (line  20)
* m:                                     Common chords.       (line  25)
* magnification->font-size <1>:          Setting the staff size.
                                                              (line   6)
* magnification->font-size:              Selecting notation font size.
                                                              (line   6)
* magnify:                               Selecting font and font size.
                                                              (line  20)
* magnifyMusic <1>:                      Available music functions.
                                                              (line 294)
* magnifyMusic:                          Selecting notation font size.
                                                              (line   6)
* magnifyStaff:                          Available music functions.
                                                              (line 299)
* magstep <1>:                           Distances and measurements.
                                                              (line  28)
* magstep <2>:                           Setting the staff size.
                                                              (line   6)
* magstep:                               Selecting notation font size.
                                                              (line   6)
* maj:                                   Common chords.       (line  25)
* major:                                 Key signature.       (line  20)
* major seven symbols:                   Customizing chord names.
                                                              (line 138)
* majorSevenSymbol:                      Customizing chord names.
                                                              (line  46)
* make-dynamic-script:                   New dynamic marks.   (line  33)
* make-pango-font-tree:                  Entire document fonts.
                                                              (line  14)
* makeClusters <1>:                      Available music functions.
                                                              (line 303)
* makeClusters:                          Clusters.            (line   6)
* makeDefaultStringTuning:               Available music functions.
                                                              (line 306)
* mark <1>:                              Available music functions.
                                                              (line 311)
* mark <2>:                              Text marks.          (line   6)
* mark:                                  Rehearsal marks.     (line   6)
* markLengthOff <1>:                     Text marks.          (line  57)
* markLengthOff:                         Metronome marks.     (line  66)
* markLengthOn <1>:                      Text marks.          (line  57)
* markLengthOn:                          Metronome marks.     (line  66)
* markup <1>:                            Text markup introduction.
                                                              (line   6)
* markup <2>:                            Separate text.       (line   6)
* markup:                                Text marks.          (line   6)
* markup-markup-spacing:                 List of flexible vertical spacing paper variables.
                                                              (line  33)
* markup-system-spacing:                 List of flexible vertical spacing paper variables.
                                                              (line  17)
* markuplist <1>:                        Multi-page markup.   (line   6)
* markuplist:                            Separate text.       (line  37)
* markupMap:                             Available music functions.
                                                              (line 314)
* max-systems-per-page:                  paper variables for line breaking.
                                                              (line   7)
* maxima <1>:                            Rests.               (line   6)
* maxima:                                Durations.           (line   6)
* measureLength <1>:                     Time administration. (line   6)
* measureLength:                         Setting automatic beam behavior.
                                                              (line   6)
* measurePosition <1>:                   Time administration. (line   6)
* measurePosition:                       Upbeats.             (line   6)
* MensuralStaff:                         Instantiating new staves.
                                                              (line   6)
* mergeDifferentlyDottedOff:             Collision resolution.
                                                              (line   6)
* mergeDifferentlyDottedOn:              Collision resolution.
                                                              (line   6)
* mergeDifferentlyHeadedOff:             Collision resolution.
                                                              (line   6)
* mergeDifferentlyHeadedOn:              Collision resolution.
                                                              (line   6)
* mf:                                    Dynamics.            (line   6)
* midiBalance:                           Context properties for MIDI effects.
                                                              (line   6)
* midiChannelMapping:                    MIDI channel mapping.
                                                              (line   6)
* midiChorusLevel:                       Context properties for MIDI effects.
                                                              (line   6)
* midiExpression:                        Context properties for MIDI effects.
                                                              (line   6)
* midiPanPosition:                       Context properties for MIDI effects.
                                                              (line   6)
* midiReverbLevel:                       Context properties for MIDI effects.
                                                              (line   6)
* min-systems-per-page:                  paper variables for line breaking.
                                                              (line  12)
* minimum-Y-extent:                      Within-system spacing properties.
                                                              (line   6)
* minimumFret <1>:                       Automatic fret diagrams.
                                                              (line  90)
* minimumFret:                           Default tablatures.  (line  73)
* minimumPageTurnLength:                 Optimal page turning.
                                                              (line  33)
* minimumRepeatLengthForPageTurn:        Optimal page turning.
                                                              (line  51)
* minor:                                 Key signature.       (line  20)
* minorChordModifier:                    Customizing chord names.
                                                              (line 112)
* mixed:                                 Piano pedals.        (line  21)
* mixolydian:                            Key signature.       (line  20)
* modalInversion <1>:                    Available music functions.
                                                              (line 326)
* modalInversion:                        Modal transformations.
                                                              (line  67)
* modalTranspose <1>:                    Available music functions.
                                                              (line 330)
* modalTranspose:                        Modal transformations.
                                                              (line  18)
* modern:                                Automatic accidentals.
                                                              (line 120)
* modern-cautionary:                     Automatic accidentals.
                                                              (line 135)
* modern-voice:                          Automatic accidentals.
                                                              (line 144)
* modern-voice-cautionary:               Automatic accidentals.
                                                              (line 156)
* mp:                                    Dynamics.            (line   6)
* MultiMeasureRestText:                  Full measure rests.  (line  68)
* musicglyph:                            Rehearsal marks.     (line  89)
* musicMap:                              Available music functions.
                                                              (line 333)
* name:                                  Defining new contexts.
                                                              (line   6)
* neo-modern:                            Automatic accidentals.
                                                              (line 187)
* neo-modern-cautionary:                 Automatic accidentals.
                                                              (line 196)
* neo-modern-voice:                      Automatic accidentals.
                                                              (line 205)
* neo-modern-voice-cautionary:           Automatic accidentals.
                                                              (line 214)
* no-reset:                              Automatic accidentals.
                                                              (line 257)
* noBeam:                                Manual beams.        (line  22)
* nonstaff-nonstaff-spacing:             Within-system spacing properties.
                                                              (line   6)
* nonstaff-relatedstaff-spacing:         Within-system spacing properties.
                                                              (line   6)
* nonstaff-unrelatedstaff-spacing:       Within-system spacing properties.
                                                              (line   6)
* noPageBreak:                           Available music functions.
                                                              (line 336)
* noPageTurn:                            Available music functions.
                                                              (line 340)
* normal-size-super:                     Selecting font and font size.
                                                              (line  74)
* normalsize <1>:                        Selecting font and font size.
                                                              (line 132)
* normalsize:                            Selecting notation font size.
                                                              (line   6)
* Note_heads_engraver:                   Automatic note splitting.
                                                              (line   6)
* null:                                  Text alignment.      (line  44)
* numericTimeSignature:                  Time signature.      (line  32)
* octaveCheck <1>:                       Available music functions.
                                                              (line 344)
* octaveCheck:                           Octave checks.       (line   6)
* offset:                                Available music functions.
                                                              (line 347)
* omit:                                  Available music functions.
                                                              (line 353)
* once:                                  Available music functions.
                                                              (line 362)
* oneVoice:                              Single-staff polyphony.
                                                              (line   6)
* ottava <1>:                            Available music functions.
                                                              (line 369)
* ottava:                                Ottava brackets.     (line   6)
* outer-margin:                          paper variables for two-sided mode.
                                                              (line  22)
* outside-staff-horizontal-padding:      Vertical collision avoidance.
                                                              (line   6)
* outside-staff-padding:                 Vertical collision avoidance.
                                                              (line   6)
* outside-staff-priority:                Vertical collision avoidance.
                                                              (line   6)
* overrideProperty:                      Available music functions.
                                                              (line 372)
* overrideTimeSignatureSettings:         Available music functions.
                                                              (line 384)
* p:                                     Dynamics.            (line   6)
* pad-around:                            Graphic notation inside markup.
                                                              (line  28)
* pad-markup:                            Graphic notation inside markup.
                                                              (line  28)
* pad-to-box:                            Graphic notation inside markup.
                                                              (line  28)
* pad-x:                                 Graphic notation inside markup.
                                                              (line  28)
* page-breaking:                         paper variables for page breaking.
                                                              (line  10)
* page-breaking-system-system-spacing:   paper variables for page breaking.
                                                              (line  15)
* page-count:                            paper variables for page breaking.
                                                              (line  23)
* page-number-type:                      paper variables for page numbering.
                                                              (line  26)
* page-spacing-weight:                   Miscellaneous paper variables.
                                                              (line   7)
* pageBreak:                             Available music functions.
                                                              (line 389)
* pageTurn:                              Available music functions.
                                                              (line 393)
* palmMute:                              Available music functions.
                                                              (line 396)
* palmMuteOn:                            Available music functions.
                                                              (line 399)
* paper-height:                          Fixed vertical spacing paper variables.
                                                              (line  14)
* paper-width:                           paper variables for widths and margins.
                                                              (line  10)
* parallelMusic <1>:                     Available music functions.
                                                              (line 402)
* parallelMusic:                         Writing music in parallel.
                                                              (line   6)
* parenthesize <1>:                      Available music functions.
                                                              (line 426)
* parenthesize:                          Parentheses.         (line   6)
* partcombine <1>:                       Available music functions.
                                                              (line 429)
* partcombine:                           Automatic part combining.
                                                              (line   6)
* partcombineApart:                      Automatic part combining.
                                                              (line  96)
* partcombineAutomatic:                  Automatic part combining.
                                                              (line  96)
* partcombineChords:                     Automatic part combining.
                                                              (line  96)
* partcombineDown:                       Available music functions.
                                                              (line 436)
* partcombineForce:                      Available music functions.
                                                              (line 440)
* partcombineSoloI:                      Automatic part combining.
                                                              (line  96)
* partcombineSoloII:                     Automatic part combining.
                                                              (line  96)
* partcombineUnisono:                    Automatic part combining.
                                                              (line  96)
* partcombineUp:                         Available music functions.
                                                              (line 443)
* partial <1>:                           Available music functions.
                                                              (line 447)
* partial:                               Upbeats.             (line   6)
* pedalSustainStyle:                     Piano pedals.        (line  21)
* percent:                               Percent repeats.     (line   6)
* phrasingSlurDashed:                    Phrasing slurs.      (line  25)
* phrasingSlurDashPattern <1>:           Available music functions.
                                                              (line 450)
* phrasingSlurDashPattern:               Phrasing slurs.      (line  56)
* phrasingSlurDotted:                    Phrasing slurs.      (line  25)
* phrasingSlurDown:                      Phrasing slurs.      (line  16)
* phrasingSlurHalfDashed:                Phrasing slurs.      (line  40)
* phrasingSlurHalfSolid:                 Phrasing slurs.      (line  40)
* phrasingSlurNeutral:                   Phrasing slurs.      (line  16)
* phrasingSlurSolid:                     Phrasing slurs.      (line  25)
* phrasingSlurUp:                        Phrasing slurs.      (line  16)
* phrygian:                              Key signature.       (line  20)
* piano:                                 Automatic accidentals.
                                                              (line 167)
* piano-cautionary:                      Automatic accidentals.
                                                              (line 180)
* PianoStaff <1>:                        Changing staff automatically.
                                                              (line   6)
* PianoStaff:                            References for keyboards.
                                                              (line   6)
* Pitch_squash_engraver:                 Showing melody rhythms.
                                                              (line  29)
* pitchedTrill <1>:                      Available music functions.
                                                              (line 454)
* pitchedTrill:                          Trills.              (line  60)
* pointAndClickOff:                      Available music functions.
                                                              (line 458)
* pointAndClickOn:                       Available music functions.
                                                              (line 462)
* pointAndClickTypes:                    Available music functions.
                                                              (line 468)
* postscript:                            Graphic notation inside markup.
                                                              (line  73)
* powerChords:                           Indicating power chords.
                                                              (line   6)
* pp:                                    Dynamics.            (line   6)
* ppp:                                   Dynamics.            (line   6)
* pppp:                                  Dynamics.            (line   6)
* ppppp:                                 Dynamics.            (line   6)
* predefinedFretboardsOff:               Automatic fret diagrams.
                                                              (line  30)
* predefinedFretboardsOn:                Automatic fret diagrams.
                                                              (line  30)
* print-all-headers:                     Miscellaneous paper variables.
                                                              (line  12)
* print-first-page-number:               paper variables for page numbering.
                                                              (line  20)
* print-page-number:                     paper variables for page numbering.
                                                              (line  23)
* propertyOverride:                      Available music functions.
                                                              (line 472)
* propertyRevert:                        Available music functions.
                                                              (line 480)
* propertySet:                           Available music functions.
                                                              (line 488)
* propertyTweak:                         Available music functions.
                                                              (line 493)
* propertyUnset:                         Available music functions.
                                                              (line 509)
* pushToTag:                             Available music functions.
                                                              (line 514)
* quotedCueEventTypes:                   Quoting other voices.
                                                              (line 123)
* quotedEventTypes:                      Quoting other voices.
                                                              (line 123)
* quoteDuring <1>:                       Available music functions.
                                                              (line 518)
* quoteDuring <2>:                       Formatting cue notes.
                                                              (line   6)
* quoteDuring:                           Quoting other voices.
                                                              (line   6)
* R:                                     Full measure rests.  (line   6)
* r:                                     Rests.               (line   6)
* ragged-bottom:                         Fixed vertical spacing paper variables.
                                                              (line  28)
* ragged-last <1>:                       Line width.          (line   6)
* ragged-last:                           paper variables for widths and margins.
                                                              (line  76)
* ragged-last-bottom:                    Fixed vertical spacing paper variables.
                                                              (line  33)
* ragged-right <1>:                      Line width.          (line   6)
* ragged-right:                          paper variables for widths and margins.
                                                              (line  70)
* raise:                                 Text alignment.      (line  44)
* relative <1>:                          Available music functions.
                                                              (line 524)
* relative <2>:                          Changing staff automatically.
                                                              (line  40)
* relative <3>:                          Transpose.           (line 177)
* relative:                              Relative octave entry.
                                                              (line   6)
* removeWithTag:                         Available music functions.
                                                              (line 528)
* repeatCommands:                        Manual repeat marks. (line   6)
* repeatTie:                             Ties.                (line  57)
* resetRelativeOctave:                   Available music functions.
                                                              (line 532)
* rest:                                  Rests.               (line   6)
* restrainOpenStrings:                   Default tablatures.  (line  73)
* retrograde <1>:                        Available music functions.
                                                              (line 535)
* retrograde:                            Retrograde.          (line   6)
* revertTimeSignatureSettings:           Available music functions.
                                                              (line 538)
* rfz:                                   Dynamics.            (line   6)
* rgb-color:                             Coloring objects.    (line  48)
* RhythmicStaff:                         Instantiating new staves.
                                                              (line   6)
* right-align:                           Text alignment.      (line  10)
* right-margin:                          paper variables for widths and margins.
                                                              (line  51)
* rightHandFinger <1>:                   Available music functions.
                                                              (line 542)
* rightHandFinger:                       Right-hand fingerings.
                                                              (line   6)
* rounded-box:                           Graphic notation inside markup.
                                                              (line   8)
* s:                                     Invisible rests.     (line   6)
* sacredHarpHeads:                       Shape note heads.    (line   6)
* sacredHarpHeadsMinor:                  Shape note heads.    (line  27)
* scaleDurations <1>:                    Available music functions.
                                                              (line 545)
* scaleDurations <2>:                    Polymetric notation. (line   6)
* scaleDurations:                        Scaling durations.   (line  36)
* score-markup-spacing:                  List of flexible vertical spacing paper variables.
                                                              (line  21)
* score-system-spacing:                  List of flexible vertical spacing paper variables.
                                                              (line  25)
* scoreTitleMarkup:                      Custom layout for titles.
                                                              (line   6)
* self-alignment-X:                      Within-system spacing properties.
                                                              (line   6)
* set:                                   Setting automatic beam behavior.
                                                              (line   6)
* set-global-staff-size:                 Setting the staff size.
                                                              (line   6)
* set-octavation:                        Ottava brackets.     (line   6)
* settingsFrom:                          Available music functions.
                                                              (line 548)
* sf:                                    Dynamics.            (line   6)
* sff:                                   Dynamics.            (line   6)
* sfz:                                   Dynamics.            (line   6)
* shape:                                 Available music functions.
                                                              (line 553)
* shiftDurations:                        Available music functions.
                                                              (line 561)
* shiftOff:                              Collision resolution.
                                                              (line   6)
* shiftOn:                               Collision resolution.
                                                              (line   6)
* shiftOnn:                              Collision resolution.
                                                              (line   6)
* shiftOnnn:                             Collision resolution.
                                                              (line   6)
* short-indent <1>:                      paper variables for shifts and indents.
                                                              (line  22)
* short-indent:                          Instrument names.    (line  56)
* show-available-fonts:                  Single entry fonts.  (line  25)
* showFirstLength:                       Skipping corrected music.
                                                              (line   6)
* showKeySignature:                      Bagpipe definitions. (line   6)
* showLastLength:                        Skipping corrected music.
                                                              (line   6)
* showStaffSwitch:                       Staff-change lines.  (line   6)
* single:                                Available music functions.
                                                              (line 565)
* skip <1>:                              Available music functions.
                                                              (line 569)
* skip:                                  Invisible rests.     (line   6)
* skipTypesetting:                       Skipping corrected music.
                                                              (line   6)
* slashChordSeparator:                   Customizing chord names.
                                                              (line  89)
* slashedGrace:                          Available music functions.
                                                              (line 572)
* slurDashed:                            Slurs.               (line  35)
* slurDashPattern <1>:                   Available music functions.
                                                              (line 576)
* slurDashPattern:                       Slurs.               (line  66)
* slurDotted:                            Slurs.               (line  35)
* slurDown:                              Slurs.               (line  19)
* slurHalfDashed:                        Slurs.               (line  50)
* slurHalfSolid:                         Slurs.               (line  50)
* slurNeutral:                           Slurs.               (line  19)
* slurSolid:                             Slurs.               (line  35)
* slurUp:                                Slurs.               (line  80)
* small <1>:                             Selecting font and font size.
                                                              (line 132)
* small:                                 Selecting notation font size.
                                                              (line   6)
* smaller:                               Selecting font and font size.
                                                              (line  20)
* sostenutoOff:                          Piano pedals.        (line   6)
* sostenutoOn:                           Piano pedals.        (line   6)
* southernHarmonyHeads:                  Shape note heads.    (line   6)
* southernHarmonyHeadsMinor:             Shape note heads.    (line  27)
* sp:                                    Dynamics.            (line   6)
* spacing:                               Horizontal spacing overview.
                                                              (line  52)
* spacingTweaks:                         Available music functions.
                                                              (line 580)
* Span_stem_engraver:                    Cross-staff stems.   (line   6)
* spp:                                   Dynamics.            (line   6)
* staff-affinity:                        Within-system spacing properties.
                                                              (line   6)
* staff-staff-spacing:                   Within-system spacing properties.
                                                              (line   6)
* Staff.midiInstrument:                  Enhancing MIDI output.
                                                              (line  14)
* Staff_symbol_engraver:                 Hiding staves.       (line   6)
* staffgroup-staff-spacing:              Within-system spacing properties.
                                                              (line   6)
* start-repeat:                          Manual repeat marks. (line   6)
* startGroup:                            Analysis brackets.   (line   6)
* startStaff <1>:                        Ossia staves.        (line   6)
* startStaff:                            Staff symbol.        (line   6)
* startTrillSpan:                        Trills.              (line   6)
* Stem:                                  Cross-staff stems.   (line   6)
* stem-spacing-correction:               Horizontal spacing overview.
                                                              (line  52)
* stemDown:                              Stems.               (line   6)
* stemLeftBeamCount:                     Manual beams.        (line  45)
* stemNeutral:                           Stems.               (line   6)
* stemRightBeamCount:                    Manual beams.        (line  45)
* stemUp:                                Stems.               (line   6)
* stopGroup:                             Analysis brackets.   (line   6)
* stopStaff <1>:                         Hiding staves.       (line   6)
* stopStaff <2>:                         Ossia staves.        (line   6)
* stopStaff:                             Staff symbol.        (line   6)
* stopTrillSpan:                         Trills.              (line   6)
* storePredefinedDiagram <1>:            Available music functions.
                                                              (line 584)
* storePredefinedDiagram:                Predefined fret diagrams.
                                                              (line 201)
* stringTuning <1>:                      Available music functions.
                                                              (line 588)
* stringTuning:                          Custom tablatures.   (line  42)
* stringTunings <1>:                     Predefined fret diagrams.
                                                              (line   6)
* stringTunings:                         Custom tablatures.   (line   6)
* styledNoteHeads:                       Available music functions.
                                                              (line 593)
* sub:                                   Selecting font and font size.
                                                              (line  74)
* suggestAccidentals:                    Annotational accidentals (musica ficta).
                                                              (line  14)
* super:                                 Selecting font and font size.
                                                              (line  74)
* sus:                                   Extended and altered chords.
                                                              (line  82)
* sustainOff:                            Piano pedals.        (line   6)
* sustainOn:                             Piano pedals.        (line   6)
* system-count:                          paper variables for line breaking.
                                                              (line  23)
* system-separator-markup:               Miscellaneous paper variables.
                                                              (line  17)
* system-system-spacing:                 List of flexible vertical spacing paper variables.
                                                              (line  30)
* systems-per-page:                      paper variables for line breaking.
                                                              (line  18)
* tabChordRepeats:                       Available music functions.
                                                              (line 596)
* tabChordRepetition:                    Available music functions.
                                                              (line 601)
* TabStaff <1>:                          Default tablatures.  (line   6)
* TabStaff:                              Instantiating new staves.
                                                              (line   6)
* TabVoice:                              Default tablatures.  (line   6)
* tag:                                   Available music functions.
                                                              (line 605)
* tagGroup:                              Available music functions.
                                                              (line 610)
* taor:                                  Bagpipe definitions. (line   6)
* teaching:                              Automatic accidentals.
                                                              (line 247)
* teeny <1>:                             Selecting font and font size.
                                                              (line 132)
* teeny:                                 Selecting notation font size.
                                                              (line   6)
* tempo:                                 Metronome marks.     (line   6)
* temporary:                             Available music functions.
                                                              (line 614)
* text:                                  Piano pedals.        (line  21)
* textLengthOff <1>:                     Text scripts.        (line  45)
* textLengthOff:                         Full measure rests.  (line  96)
* textLengthOn <1>:                      Text scripts.        (line  45)
* textLengthOn:                          Full measure rests.  (line  96)
* textSpannerDown:                       Text spanners.       (line  36)
* textSpannerNeutral:                    Text spanners.       (line  36)
* textSpannerUp:                         Text spanners.       (line  36)
* thumb:                                 Fingering instructions.
                                                              (line  20)
* tieDashed:                             Ties.                (line  83)
* tieDashPattern:                        Available music functions.
                                                              (line 627)
* tieDotted:                             Ties.                (line  83)
* tieDown:                               Ties.                (line  80)
* tieNeutral:                            Ties.                (line  80)
* tieSolid:                              Ties.                (line  83)
* tieUp:                                 Ties.                (line  80)
* time <1>:                              Available music functions.
                                                              (line 631)
* time <2>:                              Setting automatic beam behavior.
                                                              (line   6)
* time:                                  Time signature.      (line   6)
* times:                                 Available music functions.
                                                              (line 635)
* timeSignatureFraction:                 Polymetric notation. (line   6)
* tiny <1>:                              Selecting font and font size.
                                                              (line 132)
* tiny:                                  Selecting notation font size.
                                                              (line   6)
* tocItem:                               Available music functions.
                                                              (line 638)
* top-margin:                            Fixed vertical spacing paper variables.
                                                              (line  18)
* top-markup-spacing:                    List of flexible vertical spacing paper variables.
                                                              (line  46)
* top-system-spacing:                    List of flexible vertical spacing paper variables.
                                                              (line  41)
* translate:                             Text alignment.      (line  71)
* translate-scaled:                      Text alignment.      (line  71)
* transpose <1>:                         Available music functions.
                                                              (line 642)
* transpose <2>:                         Transpose.           (line   6)
* transpose:                             Relative octave entry.
                                                              (line 173)
* transposedCueDuring <1>:               Available music functions.
                                                              (line 645)
* transposedCueDuring:                   Formatting cue notes.
                                                              (line 173)
* transposition <1>:                     Available music functions.
                                                              (line 652)
* transposition <2>:                     Quoting other voices.
                                                              (line   6)
* transposition:                         Instrument transpositions.
                                                              (line   6)
* treCorde:                              Piano pedals.        (line   6)
* tremolo:                               Tremolo repeats.     (line   6)
* triangle:                              Graphic notation inside markup.
                                                              (line  54)
* trill:                                 Trills.              (line   6)
* tuplet <1>:                            Available music functions.
                                                              (line 655)
* tuplet <2>:                            Polymetric notation. (line   6)
* tuplet:                                Tuplets.             (line   6)
* tupletDown:                            Tuplets.             (line  33)
* tupletNeutral:                         Tuplets.             (line  33)
* TupletNumber:                          Tuplets.             (line  94)
* tupletNumberFormatFunction:            Tuplets.             (line  71)
* tupletSpan:                            Available music functions.
                                                              (line 666)
* tupletSpannerDuration:                 Tuplets.             (line  71)
* tupletUp:                              Tuplets.             (line  33)
* tweak:                                 Available music functions.
                                                              (line 674)
* two-sided:                             paper variables for two-sided mode.
                                                              (line  10)
* type:                                  Defining new contexts.
                                                              (line   6)
* unaCorda:                              Piano pedals.        (line   6)
* underline:                             Selecting font and font size.
                                                              (line   6)
* undo:                                  Available music functions.
                                                              (line 685)
* unfold:                                Written-out repeats. (line   6)
* unfoldRepeats:                         Available music functions.
                                                              (line 690)
* unHideNotes:                           Hidden notes.        (line   6)
* VaticanaStaff:                         Instantiating new staves.
                                                              (line   6)
* VerticalAxisGroup:                     Within-system spacing properties.
                                                              (line   6)
* Voice:                                 Single-staff polyphony.
                                                              (line   6)
* voice:                                 Automatic accidentals.
                                                              (line   6)
* voiceOne:                              Single-staff polyphony.
                                                              (line   6)
* void:                                  Available music functions.
                                                              (line 694)
* walkerHeads:                           Shape note heads.    (line   6)
* walkerHeadsMinor:                      Shape note heads.    (line  27)
* whichBar:                              Bar lines.           (line 297)
* with-color:                            Coloring objects.    (line   6)
* withMusicProperty:                     Available music functions.
                                                              (line 699)
* wordwrap:                              Text alignment.      (line 137)
* wordwrap-lines:                        Multi-page markup.   (line   6)
* X-offset:                              Within-system spacing properties.
                                                              (line   6)
* x11-color:                             Coloring objects.    (line   6)
* xNote:                                 Available music functions.
                                                              (line 702)
* xNotesOn:                              Available music functions.
                                                              (line 705)
* |:                                     Bar and bar number checks.
                                                              (line   6)
* ~:                                     Ties.                (line   6)



Local Variables:
coding: utf-8
End:
